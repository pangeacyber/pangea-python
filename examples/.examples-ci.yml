.sdk-examples-base:
  stage: examples
  retry: 2
  parallel:
    matrix:
      - PYTHON_VERSION: ["3.8", "3.9", "3.10", "3.11"]
        EXAMPLE_FOLDER:
          - audit
          - authn
          - authz
          - embargo
          - file_scan
          - intel
          - redact
          - vault
  image: python:${PYTHON_VERSION}-bookworm
  before_script:
    - export PANGEA_AUDIT_AUTH0_CONFIG_ID="${PANGEA_AUDIT_CONFIG_ID_3_LVE_AWS}"
    - export PANGEA_AUDIT_CONFIG_ID="${PANGEA_AUDIT_CONFIG_ID_1_LVE_AWS}"
    - export PANGEA_AUDIT_CUSTOM_SCHEMA_TOKEN="${PANGEA_INTEGRATION_CUSTOM_SCHEMA_TOKEN_LVE_AWS}"
    - export PANGEA_AUDIT_MULTICONFIG_TOKEN="${PANGEA_INTEGRATION_MULTI_CONFIG_TOKEN_LVE_AWS}"
    - export PANGEA_AUDIT_TOKEN="${PANGEA_INTEGRATION_TOKEN_LVE_AWS}"
    - export PANGEA_AUTHN_TOKEN="${PANGEA_INTEGRATION_TOKEN_LVE_AWS}"
    - export PANGEA_AUTHZ_TOKEN="${PANGEA_INTEGRATION_TOKEN_LVE_AWS}"
    - export PANGEA_DOMAIN="${PANGEA_INTEGRATION_DOMAIN_LVE_AWS}"
    - export PANGEA_EMBARGO_TOKEN="${PANGEA_INTEGRATION_TOKEN_LVE_AWS}"
    - export PANGEA_FILE_SCAN_TOKEN="${PANGEA_INTEGRATION_TOKEN_LVE_AWS}"
    - export PANGEA_INTEL_TOKEN="${PANGEA_INTEGRATION_TOKEN_LVE_AWS}"
    - export PANGEA_REDACT_CONFIG_ID="${PANGEA_REDACT_CONFIG_ID_1_LVE_AWS}"
    - export PANGEA_REDACT_MULTICONFIG_TOKEN="${PANGEA_INTEGRATION_MULTI_CONFIG_TOKEN_LVE_AWS}"
    - export PANGEA_REDACT_TOKEN="${PANGEA_INTEGRATION_TOKEN_LVE_AWS}"
    - export PANGEA_VAULT_TOKEN="${PANGEA_INTEGRATION_TOKEN_LVE_AWS}"
    - !reference [.setup, update-pip]
    - !reference [.setup, update-poetry]
  rules:
    - if: $CI_COMMIT_BRANCH

sdk-examples:
  extends: .sdk-examples-base
  script:
    - cd examples/${EXAMPLE_FOLDER}/
    - poetry check
    - poetry install
    - bash ../../dev/run_examples.sh

sdk-examples-asyncio:
  extends: .sdk-examples-base
  script:
    - cd examples/asyncio/${EXAMPLE_FOLDER}/
    - poetry check
    - poetry install
    - bash ../../../dev/run_examples.sh
