{
  "info": {
    "title": "vault",
    "description": "Provides secure storage of secrets, cryptographic keys, and Pangea API Tokens tokens as Vault items. Easily generate, import, and manage secrets and keys to stay compliant and secure.",
    "version": "1",
    "contact": {
      "name": "Pangea",
      "url": "https://pangea.cloud/docs/support",
      "email": "support@pangea.cloud"
    }
  },
  "servers": [
    {
      "url": "https://vault.aws.us.pangea.cloud",
      "description": "Pangea regional service cluster"
    },
    {
      "url": "https://vault.aws.us-east.pangea.cloud",
      "description": "Pangea regional service cluster"
    },
    {
      "url": "https://vault.aws.eu.pangea.cloud",
      "description": "Pangea regional service cluster"
    }
  ],
  "paths": {
    "/v2/get": {
      "post": {
        "operationId": "vault_post_v2_get",
        "summary": "Get vault item",
        "description": "Retrieve details for a key, secret, token, or folder.",
        "tags": ["vault", "v2-general"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id"],
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/vault-req-id"
                  },
                  "version": {
                    "$ref": "#/components/schemas/vault-req-multiple-versions-v2"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Details for the requested Vault key, secret, token, or folder",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "oneOf": [
                            {
                              "$ref": "#/components/schemas/v2-asymmetric-key"
                            },
                            {
                              "$ref": "#/components/schemas/v2-symmetric-key"
                            },
                            {
                              "$ref": "#/components/schemas/v2-secret"
                            },
                            {
                              "$ref": "#/components/schemas/v2-token"
                            },
                            {
                              "$ref": "#/components/schemas/v2-client-secret"
                            },
                            {
                              "$ref": "#/components/schemas/v2-folder"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/get_bulk": {
      "post": {
        "operationId": "vault_post_v2_get_bulk",
        "summary": "Get vault items",
        "description": "Retrieve details for multiple Vault items, including keys, secrets, tokens, or folders, that match a given filter specification.",
        "tags": ["vault", "v2-general"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "filter": {
                    "$ref": "#/components/schemas/vault-list-filter"
                  },
                  "version": {
                    "$ref": "#/components/schemas/vault-list-version"
                  },
                  "size": {
                    "$ref": "#/components/schemas/vault-list-size"
                  },
                  "order": {
                    "$ref": "#/components/schemas/vault-list-order"
                  },
                  "order_by": {
                    "$ref": "#/components/schemas/vault-list-order-by"
                  },
                  "last": {
                    "$ref": "#/components/schemas/vault-req-list-last"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Array of Vault items, including keys, secrets, tokens, or folders, and their details that match the requested filter specification",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "$ref": "#/components/schemas/v2-asymmetric-key"
                                  },
                                  {
                                    "$ref": "#/components/schemas/v2-symmetric-key"
                                  },
                                  {
                                    "$ref": "#/components/schemas/v2-secret"
                                  },
                                  {
                                    "$ref": "#/components/schemas/v2-token"
                                  },
                                  {
                                    "$ref": "#/components/schemas/v2-client-secret"
                                  },
                                  {
                                    "$ref": "#/components/schemas/v2-folder"
                                  }
                                ]
                              }
                            },
                            "last": {
                              "$ref": "#/components/schemas/vault-list-last"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/list": {
      "post": {
        "operationId": "vault_post_v2_list",
        "summary": "List vault items",
        "description": "Retrieve an array of Vault items matching a given filter, including secrets, keys, tokens, and folders, along with their common details.",
        "tags": ["vault", "v2-general"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "filter": {
                    "$ref": "#/components/schemas/vault-list-filter"
                  },
                  "size": {
                    "$ref": "#/components/schemas/vault-list-size"
                  },
                  "order": {
                    "$ref": "#/components/schemas/vault-list-order"
                  },
                  "order_by": {
                    "$ref": "#/components/schemas/vault-list-order-by"
                  },
                  "last": {
                    "$ref": "#/components/schemas/vault-req-list-last"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Array of Vault items matching the provided filter, including secrets, keys, tokens, and folders, along with their common details",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/v2-list-item"
                              }
                            },
                            "last": {
                              "$ref": "#/components/schemas/vault-list-last"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/update": {
      "post": {
        "operationId": "vault_post_v2_update",
        "summary": "Update vault item",
        "description": "Update information associated with a key, secret, token, or folder.",
        "tags": ["vault", "v2-general"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "title": "Secret",
                    "type": "object",
                    "properties": {
                      "id": {
                        "$ref": "#/components/schemas/vault-req-secret-id"
                      },
                      "name": {
                        "$ref": "#/components/schemas/vault-req-secret-name"
                      },
                      "folder": {
                        "$ref": "#/components/schemas/vault-folder"
                      },
                      "metadata": {
                        "$ref": "#/components/schemas/vault-user-metadata"
                      },
                      "tags": {
                        "$ref": "#/components/schemas/vault-tags"
                      },
                      "enabled": {
                        "$ref": "#/components/schemas/vault-req-update-enabled"
                      },
                      "disabled_at": {
                        "$ref": "#/components/schemas/vault-disabled-at"
                      }
                    }
                  },
                  {
                    "title": "Pangea Token",
                    "type": "object",
                    "properties": {
                      "id": {
                        "$ref": "#/components/schemas/vault-req-token-id"
                      },
                      "name": {
                        "$ref": "#/components/schemas/vault-req-token-name"
                      },
                      "folder": {
                        "$ref": "#/components/schemas/vault-folder"
                      },
                      "metadata": {
                        "$ref": "#/components/schemas/vault-user-metadata"
                      },
                      "tags": {
                        "$ref": "#/components/schemas/vault-tags"
                      },
                      "enabled": {
                        "$ref": "#/components/schemas/vault-req-update-enabled"
                      },
                      "disabled_at": {
                        "$ref": "#/components/schemas/vault-disabled-at"
                      },
                      "rotation_frequency": {
                        "$ref": "#/components/schemas/vault-req-update-rotation-frequency"
                      },
                      "rotation_state": {
                        "$ref": "#/components/schemas/vault-req-rotation-state"
                      },
                      "rotation_grace_period": {
                        "$ref": "#/components/schemas/vault-req-update-rotation-grace-period"
                      }
                    }
                  },
                  {
                    "title": "AuthN Client Secret",
                    "type": "object",
                    "properties": {
                      "id": {
                        "$ref": "#/components/schemas/vault-req-secret-id"
                      },
                      "name": {
                        "$ref": "#/components/schemas/vault-req-secret-name"
                      },
                      "folder": {
                        "$ref": "#/components/schemas/vault-folder"
                      },
                      "metadata": {
                        "$ref": "#/components/schemas/vault-pangea-metadata"
                      },
                      "tags": {
                        "$ref": "#/components/schemas/vault-tags"
                      },
                      "enabled": {
                        "$ref": "#/components/schemas/vault-req-update-enabled"
                      },
                      "disabled_at": {
                        "$ref": "#/components/schemas/vault-disabled-at"
                      },
                      "rotation_frequency": {
                        "$ref": "#/components/schemas/vault-req-update-rotation-frequency"
                      },
                      "rotation_state": {
                        "$ref": "#/components/schemas/vault-req-rotation-state"
                      },
                      "rotation_grace_period": {
                        "$ref": "#/components/schemas/vault-req-update-rotation-grace-period"
                      }
                    }
                  },
                  {
                    "title": "Platform Client Secret",
                    "type": "object",
                    "properties": {
                      "id": {
                        "$ref": "#/components/schemas/vault-req-secret-id"
                      },
                      "type": {
                        "const": "pangea_platform_client_secret"
                      },
                      "name": {
                        "$ref": "#/components/schemas/vault-req-secret-name"
                      },
                      "folder": {
                        "$ref": "#/components/schemas/vault-folder"
                      },
                      "metadata": {
                        "$ref": "#/components/schemas/vault-pangea-metadata"
                      },
                      "tags": {
                        "$ref": "#/components/schemas/vault-tags"
                      },
                      "enabled": {
                        "$ref": "#/components/schemas/vault-req-update-enabled"
                      },
                      "disabled_at": {
                        "$ref": "#/components/schemas/vault-disabled-at"
                      },
                      "rotation_frequency": {
                        "$ref": "#/components/schemas/vault-req-update-rotation-frequency"
                      },
                      "rotation_state": {
                        "$ref": "#/components/schemas/vault-req-rotation-state"
                      },
                      "rotation_grace_period": {
                        "$ref": "#/components/schemas/vault-req-update-rotation-grace-period"
                      }
                    }
                  },
                  {
                    "title": "Asymmetric Key",
                    "type": "object",
                    "properties": {
                      "id": {
                        "$ref": "#/components/schemas/vault-req-key-id"
                      },
                      "name": {
                        "$ref": "#/components/schemas/vault-req-key-name"
                      },
                      "folder": {
                        "$ref": "#/components/schemas/vault-folder"
                      },
                      "metadata": {
                        "$ref": "#/components/schemas/vault-user-metadata"
                      },
                      "tags": {
                        "$ref": "#/components/schemas/vault-tags"
                      },
                      "enabled": {
                        "$ref": "#/components/schemas/vault-req-update-enabled"
                      },
                      "disabled_at": {
                        "$ref": "#/components/schemas/vault-disabled-at"
                      },
                      "rotation_frequency": {
                        "$ref": "#/components/schemas/vault-req-update-rotation-frequency"
                      },
                      "rotation_state": {
                        "$ref": "#/components/schemas/vault-req-rotation-state"
                      }
                    }
                  },
                  {
                    "title": "Symmetric Key",
                    "type": "object",
                    "properties": {
                      "id": {
                        "$ref": "#/components/schemas/vault-req-key-id"
                      },
                      "name": {
                        "$ref": "#/components/schemas/vault-req-key-name"
                      },
                      "folder": {
                        "$ref": "#/components/schemas/vault-folder"
                      },
                      "metadata": {
                        "$ref": "#/components/schemas/vault-user-metadata"
                      },
                      "tags": {
                        "$ref": "#/components/schemas/vault-tags"
                      },
                      "enabled": {
                        "$ref": "#/components/schemas/vault-req-update-enabled"
                      },
                      "disabled_at": {
                        "$ref": "#/components/schemas/vault-disabled-at"
                      },
                      "rotation_frequency": {
                        "$ref": "#/components/schemas/vault-req-update-rotation-frequency"
                      },
                      "rotation_state": {
                        "$ref": "#/components/schemas/vault-req-rotation-state"
                      }
                    }
                  },
                  {
                    "title": "Folder",
                    "type": "object",
                    "properties": {
                      "id": {
                        "$ref": "#/components/schemas/vault-req-folder-id"
                      },
                      "type": {
                        "const": "folder"
                      },
                      "name": {
                        "$ref": "#/components/schemas/vault-req-folder-name"
                      },
                      "folder": {
                        "$ref": "#/components/schemas/vault-folder"
                      },
                      "metadata": {
                        "$ref": "#/components/schemas/vault-pangea-metadata"
                      },
                      "tags": {
                        "$ref": "#/components/schemas/vault-tags"
                      },
                      "rotation_frequency": {
                        "$ref": "#/components/schemas/vault-req-update-rotation-frequency-folder"
                      },
                      "rotation_state": {
                        "$ref": "#/components/schemas/vault-req-rotation-state"
                      },
                      "rotation_grace_period": {
                        "$ref": "#/components/schemas/vault-req-update-rotation-grace-period"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Vault key, secret, token, or folder details",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "oneOf": [
                            {
                              "$ref": "#/components/schemas/v2-asymmetric-key"
                            },
                            {
                              "$ref": "#/components/schemas/v2-symmetric-key"
                            },
                            {
                              "$ref": "#/components/schemas/v2-secret"
                            },
                            {
                              "$ref": "#/components/schemas/v2-token"
                            },
                            {
                              "$ref": "#/components/schemas/v2-client-secret"
                            },
                            {
                              "$ref": "#/components/schemas/v2-folder"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/delete": {
      "post": {
        "operationId": "vault_post_v2_delete",
        "summary": "Delete vault item",
        "description": "Delete a key, secret, token, or folder.",
        "tags": ["vault", "v2-general"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id"],
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/vault-req-id"
                  },
                  "recursive": {
                    "$ref": "#/components/schemas/vault-delete-recursive"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Deleted Vault item",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "$ref": "#/components/schemas/vault-id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/export": {
      "post": {
        "operationId": "vault_post_v2_export",
        "summary": "Export key",
        "description": "Export a symmetric or asymmetric key marked as exportable when added to Vault.\n\nWhen no `asymmetric_algorithm` option is selected, the exported symmetric key material is a Base64-encoded byte array, and the asymmetric key pair is exported in PEM format.\n\nWhen an `asymmetric_algorithm` option is selected, the `asymmetric_public_key` parameter must be populated with an RSA-4096 key.\n\nIf `asymmetric_algorithm` is set to `RSA-OAEP-4096-SHA512`, only key material up to 382 bytes can be encrypted using the provided `asymmetric_public_key` value. The exported symmetric and asymmetric private key material is encrypted and Base64-encoded. Public keys are exported in PEM format.\n\nSet `asymmetric_algorithm` to `RSA-KEM-NO-PADDING-4096` to securely export key material of any length using the Key Encapsulation Method (KEM), as described in [RFC 5990](https://www.rfc-editor.org/rfc/rfc5990.html).\n\nLearn more about exporting key material from Vault in the [Export a Key](/docs/vault/manage-keys/export) documentation.",
        "tags": ["vault", "v2-general"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id"],
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/vault-req-key-id"
                  },
                  "version": {
                    "$ref": "#/components/schemas/vault-req-key-version"
                  },
                  "asymmetric_algorithm": {
                    "$ref": "#/components/schemas/vault-export-asymmetric-algorithm"
                  },
                  "asymmetric_public_key": {
                    "$ref": "#/components/schemas/vault-export-encryption-key-v2"
                  },
                  "kem_password": {
                    "$ref": "#/components/schemas/vault-export-kem-password"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Exported Vault key or key pair materials",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "oneOf": [
                            {
                              "title": "Asymmetric Key",
                              "type": "object",
                              "allOf": [
                                {
                                  "$ref": "#/components/schemas/vault-v2-export-response"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "public_key": {
                                      "$ref": "#/components/schemas/vault-public-key"
                                    },
                                    "private_key": {
                                      "$ref": "#/components/schemas/vault-private-key"
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              "title": "Symmetric Key",
                              "type": "object",
                              "allOf": [
                                {
                                  "$ref": "#/components/schemas/vault-v2-export-response"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "$ref": "#/components/schemas/vault-key"
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/state/change": {
      "post": {
        "operationId": "vault_post_v2_state_change",
        "summary": "Change vault item state",
        "description": "Change the state of a version of a Vault key, secret, or token.",
        "tags": ["vault", "v2-general"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id", "state"],
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/vault-req-key-secret-token-id"
                  },
                  "version": {
                    "$ref": "#/components/schemas/vault-req-key-secret-token-version"
                  },
                  "state": {
                    "$ref": "#/components/schemas/vault-req-state"
                  },
                  "destroy_period": {
                    "$ref": "#/components/schemas/vault-req-destroy-period"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Vault key, secret, or token with the changed state",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "oneOf": [
                            {
                              "$ref": "#/components/schemas/v2-asymmetric-key"
                            },
                            {
                              "$ref": "#/components/schemas/v2-symmetric-key"
                            },
                            {
                              "$ref": "#/components/schemas/v2-secret"
                            },
                            {
                              "$ref": "#/components/schemas/v2-token"
                            },
                            {
                              "$ref": "#/components/schemas/v2-client-secret"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/secret/rotate": {
      "post": {
        "operationId": "vault_post_v2_secret_rotate",
        "summary": "Rotate secret",
        "description": "Rotate a Vault secret or token",
        "tags": ["vault", "v2-secrets"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "title": "Secret",
                    "type": "object",
                    "required": ["id", "secret"],
                    "properties": {
                      "id": {
                        "$ref": "#/components/schemas/vault-req-secret-id"
                      },
                      "rotation_state": {
                        "$ref": "#/components/schemas/vault-req-manual-rotation-state"
                      },
                      "secret": {
                        "$ref": "#/components/schemas/vault-secret"
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "title": "Pangea Token",
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                      "id": {
                        "$ref": "#/components/schemas/vault-req-token-id"
                      },
                      "rotation_state": {
                        "$ref": "#/components/schemas/vault-req-manual-rotation-state"
                      },
                      "rotation_grace_period": {
                        "$ref": "#/components/schemas/vault-req-manual-rotation-grace-period"
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "title": "Pangea Platform Client Secret",
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                      "id": {
                        "$ref": "#/components/schemas/vault-req-secret-id"
                      },
                      "rotation_state": {
                        "$ref": "#/components/schemas/vault-req-manual-rotation-state"
                      },
                      "rotation_grace_period": {
                        "$ref": "#/components/schemas/vault-req-manual-rotation-grace-period"
                      }
                    },
                    "additionalProperties": false
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Rotated Vault secret or token",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "oneOf": [
                            {
                              "$ref": "#/components/schemas/v2-secret"
                            },
                            {
                              "$ref": "#/components/schemas/v2-token"
                            },
                            {
                              "$ref": "#/components/schemas/v2-client-secret"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/secret/store": {
      "post": {
        "operationId": "vault_post_v2_secret_store",
        "summary": "Store secret",
        "description": "Store a secret or token as a Vault item.",
        "tags": ["vault", "v2-secrets"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "title": "Secret",
                    "type": "object",
                    "required": ["secret"],
                    "properties": {
                      "type": {
                        "const": "secret"
                      },
                      "name": {
                        "$ref": "#/components/schemas/vault-name"
                      },
                      "folder": {
                        "$ref": "#/components/schemas/vault-folder"
                      },
                      "metadata": {
                        "$ref": "#/components/schemas/vault-user-metadata"
                      },
                      "tags": {
                        "$ref": "#/components/schemas/vault-tags"
                      },
                      "disabled_at": {
                        "$ref": "#/components/schemas/vault-disabled-at"
                      },
                      "encrypting_item_id": {
                        "$ref": "#/components/schemas/vault-req-encrypting-item-id"
                      },
                      "secret": {
                        "$ref": "#/components/schemas/vault-req-secret"
                      }
                    }
                  },
                  {
                    "title": "Pangea Token",
                    "type": "object",
                    "required": ["token"],
                    "properties": {
                      "type": {
                        "const": "pangea_token"
                      },
                      "name": {
                        "$ref": "#/components/schemas/vault-name"
                      },
                      "folder": {
                        "$ref": "#/components/schemas/vault-folder"
                      },
                      "metadata": {
                        "$ref": "#/components/schemas/vault-user-metadata"
                      },
                      "tags": {
                        "$ref": "#/components/schemas/vault-tags"
                      },
                      "disabled_at": {
                        "$ref": "#/components/schemas/vault-disabled-at"
                      },
                      "encrypting_item_id": {
                        "$ref": "#/components/schemas/vault-req-encrypting-item-id"
                      },
                      "token": {
                        "$ref": "#/components/schemas/vault-token"
                      },
                      "rotation_frequency": {
                        "$ref": "#/components/schemas/vault-req-rotation-frequency"
                      },
                      "rotation_state": {
                        "$ref": "#/components/schemas/vault-req-rotation-state-token"
                      },
                      "rotation_grace_period": {
                        "$ref": "#/components/schemas/vault-req-rotation-grace-period"
                      }
                    }
                  },
                  {
                    "title": "AuthN Client Secret",
                    "type": "object",
                    "required": [
                      "client_secret",
                      "client_id",
                      "client_secret_id"
                    ],
                    "properties": {
                      "type": {
                        "const": "pangea_client_secret"
                      },
                      "name": {
                        "$ref": "#/components/schemas/vault-name"
                      },
                      "folder": {
                        "$ref": "#/components/schemas/vault-folder"
                      },
                      "metadata": {
                        "$ref": "#/components/schemas/vault-pangea-metadata"
                      },
                      "tags": {
                        "$ref": "#/components/schemas/vault-tags"
                      },
                      "disabled_at": {
                        "$ref": "#/components/schemas/vault-disabled-at"
                      },
                      "encrypting_item_id": {
                        "$ref": "#/components/schemas/vault-req-encrypting-item-id"
                      },
                      "client_secret": {
                        "$ref": "#/components/schemas/vault-client-secret"
                      },
                      "client_id": {
                        "$ref": "#/components/schemas/vault-client-id"
                      },
                      "client_secret_id": {
                        "$ref": "#/components/schemas/vault-client-secret-id"
                      },
                      "rotation_frequency": {
                        "$ref": "#/components/schemas/vault-req-rotation-frequency"
                      },
                      "rotation_state": {
                        "$ref": "#/components/schemas/vault-req-rotation-state"
                      },
                      "rotation_grace_period": {
                        "$ref": "#/components/schemas/vault-req-rotation-grace-period"
                      }
                    }
                  },
                  {
                    "title": "Platform Client Secret",
                    "type": "object",
                    "required": [
                      "client_secret",
                      "client_id",
                      "client_secret_id"
                    ],
                    "properties": {
                      "type": {
                        "const": "pangea_platform_client_secret"
                      },
                      "name": {
                        "$ref": "#/components/schemas/vault-name"
                      },
                      "folder": {
                        "$ref": "#/components/schemas/vault-folder"
                      },
                      "metadata": {
                        "$ref": "#/components/schemas/vault-pangea-metadata"
                      },
                      "tags": {
                        "$ref": "#/components/schemas/vault-tags"
                      },
                      "disabled_at": {
                        "$ref": "#/components/schemas/vault-disabled-at"
                      },
                      "encrypting_item_id": {
                        "$ref": "#/components/schemas/vault-req-encrypting-item-id"
                      },
                      "client_secret": {
                        "$ref": "#/components/schemas/vault-client-secret"
                      },
                      "client_id": {
                        "$ref": "#/components/schemas/vault-client-id"
                      },
                      "client_secret_id": {
                        "$ref": "#/components/schemas/vault-client-secret-id"
                      },
                      "rotation_frequency": {
                        "$ref": "#/components/schemas/vault-req-rotation-frequency"
                      },
                      "rotation_state": {
                        "$ref": "#/components/schemas/vault-req-rotation-state"
                      },
                      "rotation_grace_period": {
                        "$ref": "#/components/schemas/vault-req-rotation-grace-period"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Secret or token stored as a Vault item.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "oneOf": [
                            {
                              "$ref": "#/components/schemas/v2-secret"
                            },
                            {
                              "$ref": "#/components/schemas/v2-token"
                            },
                            {
                              "$ref": "#/components/schemas/v2-client-secret"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/key/generate": {
      "post": {
        "operationId": "vault_post_v2_key_generate",
        "summary": "Generate key",
        "description": "Generate a symmetric or asymmetric key.",
        "tags": ["vault", "v2-keys"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/vault-v2-generate-asymmetric-key-request"
                  },
                  {
                    "$ref": "#/components/schemas/vault-v2-generate-symmetric-key-request"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Generated Vault key",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "oneOf": [
                            {
                              "$ref": "#/components/schemas/v2-asymmetric-key"
                            },
                            {
                              "$ref": "#/components/schemas/v2-symmetric-key"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/key/rotate": {
      "post": {
        "operationId": "vault_post_v2_key_rotate",
        "summary": "Rotate key",
        "description": "Manually rotate a symmetric or asymmetric key. Optionally, provide new key value(s) created using the same algorithm as the original key.",
        "tags": ["vault", "v2-keys"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "title": "Symmetric Key",
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                      "id": {
                        "$ref": "#/components/schemas/vault-key-id"
                      },
                      "rotation_state": {
                        "$ref": "#/components/schemas/vault-req-manual-rotation-state"
                      },
                      "key": {
                        "$ref": "#/components/schemas/vault-key"
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "title": "Asymmetric Key",
                    "type": "object",
                    "required": ["id"],
                    "properties": {
                      "id": {
                        "$ref": "#/components/schemas/vault-key-id"
                      },
                      "rotation_state": {
                        "$ref": "#/components/schemas/vault-req-manual-rotation-state"
                      },
                      "public_key": {
                        "$ref": "#/components/schemas/vault-public-key"
                      },
                      "private_key": {
                        "$ref": "#/components/schemas/vault-private-key"
                      }
                    },
                    "additionalProperties": false
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Rotated Vault key",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "oneOf": [
                            {
                              "$ref": "#/components/schemas/v2-symmetric-key"
                            },
                            {
                              "$ref": "#/components/schemas/v2-asymmetric-key"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/encrypt": {
      "post": {
        "operationId": "vault_post_v2_encrypt",
        "summary": "Encrypt data",
        "description": "Encrypt a message using a key created for encryption purposes.",
        "tags": ["vault", "v2-keys"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id", "plain_text"],
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/vault-req-encryption-key-id"
                  },
                  "version": {
                    "$ref": "#/components/schemas/vault-req-key-version"
                  },
                  "plain_text": {
                    "$ref": "#/components/schemas/vault-req-plain-text"
                  },
                  "additional_data": {
                    "$ref": "#/components/schemas/additional-data"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Encryption results",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "$ref": "#/components/schemas/vault-key-id"
                            },
                            "version": {
                              "$ref": "#/components/schemas/vault-encryption-key-version"
                            },
                            "algorithm": {
                              "$ref": "#/components/schemas/vault-encryption-key-algorithm"
                            },
                            "cipher_text": {
                              "$ref": "#/components/schemas/vault-cipher-text"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/decrypt": {
      "post": {
        "operationId": "vault_post_v2_decrypt",
        "summary": "Decrypt data",
        "description": "Decrypt a message using the same key that was used for encryption.",
        "tags": ["vault", "v2-keys"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id", "cipher_text"],
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/vault-req-decryption-key-id"
                  },
                  "version": {
                    "$ref": "#/components/schemas/vault-req-key-version"
                  },
                  "cipher_text": {
                    "$ref": "#/components/schemas/vault-req-cipher-text"
                  },
                  "additional_data": {
                    "$ref": "#/components/schemas/additional-data"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Decryption results",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "$ref": "#/components/schemas/vault-key-id"
                            },
                            "version": {
                              "$ref": "#/components/schemas/vault-decryption-key-version"
                            },
                            "algorithm": {
                              "$ref": "#/components/schemas/vault-decryption-key-algorithm"
                            },
                            "plain_text": {
                              "$ref": "#/components/schemas/vault-plain-text"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/encrypt_structured": {
      "post": {
        "operationId": "vault_post_v2_encrypt_structured",
        "summary": "Encrypt structured JSON",
        "description": "Encrypt structured data by selecting and encrypting parts of a JSON object using a [JSONPath](https://goessner.net/articles/JsonPath/) expression.\n\nFor example, use a JSONPath like `$.batch_input[*].ssn` to select elements in the following JSON document:\n```\n{\n    \"batch_input\": [\n        {\n            \"ssn\": \"123-45-6789\"\n        },\n        {\n            \"ssn\": \"987-65-4321\"\n        }\n    ]\n}\n```\n\nUsing this filter for encryption will return a JSON document where `123-45-6789` and `987-65-4321` are replaced with their encrypted values.\n\nFind additional details in the [Structured Data Encryption](https://pangea.cloud/docs/vault/use-keys/encrypt-and-decrypt/structured-data-encryption) and [JSON Path](https://pangea.cloud/docs/redact/using-redact/using-redact#about-jsonpath) documentation.",
        "tags": ["vault", "v2-keys"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id", "structured_data", "filter"],
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/vault-req-encryption-key-id"
                  },
                  "version": {
                    "$ref": "#/components/schemas/vault-req-key-version"
                  },
                  "additional_data": {
                    "$ref": "#/components/schemas/additional-data"
                  },
                  "structured_data": {
                    "$ref": "#/components/schemas/vault-structured-data"
                  },
                  "filter": {
                    "$ref": "#/components/schemas/vault-structured-filter"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Structured data encryption results",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "$ref": "#/components/schemas/vault-key-id"
                            },
                            "version": {
                              "$ref": "#/components/schemas/vault-encryption-key-version"
                            },
                            "algorithm": {
                              "$ref": "#/components/schemas/vault-encryption-key-algorithm"
                            },
                            "structured_data": {
                              "$ref": "#/components/schemas/vault-encrypted-structured-data"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/decrypt_structured": {
      "post": {
        "operationId": "vault_post_v2_decrypt_structured",
        "summary": "Decrypt structured JSON",
        "description": "Decrypt structured data by selecting encrypted parts of a JSON object using a [JSONPath](https://goessner.net/articles/JsonPath/) expression.\n\nFor example, use a JSONPath like `$.batch_input[*].ssn` to select encrypted elements in the following JSON document:\n```\n{\n    \"batch_input\": [\n        {\n            \"ssn\": \"CwAAAIfgVg2uv98KIMhAS17DQfznWEA8yXTqLvZFaXDafQIu\"\n        },\n        {\n            \"ssn\": \"CwAAADIqwKdF8LQc9SlAFvyf+G4wvsCgurmuVIWad9Ip5tl2\"\n        }\n    ]\n}\n```\n\nUsing this filter for decryption will return a JSON document with the encrypted values replaced by their decrypted counterparts.\n\nFind additional details in the [Structured Data Encryption](https://pangea.cloud/docs/vault/use-keys/encrypt-and-decrypt/structured-data-encryption) and [JSON Path](https://pangea.cloud/docs/redact/using-redact/using-redact#about-jsonpath) documentation.",
        "tags": ["vault", "v2-keys"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id", "structured_data", "filter"],
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/vault-req-structured-decryption-key-id"
                  },
                  "version": {
                    "$ref": "#/components/schemas/vault-req-key-version"
                  },
                  "structured_data": {
                    "$ref": "#/components/schemas/vault-encrypted-structured-data"
                  },
                  "filter": {
                    "$ref": "#/components/schemas/vault-structured-filter"
                  },
                  "additional_data": {
                    "$ref": "#/components/schemas/additional-data"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Structured data decryption results",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "$ref": "#/components/schemas/vault-id"
                            },
                            "version": {
                              "$ref": "#/components/schemas/vault-decryption-key-version"
                            },
                            "algorithm": {
                              "$ref": "#/components/schemas/vault-symmetric-key-algorithm"
                            },
                            "structured_data": {
                              "$ref": "#/components/schemas/vault-structured-data"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/encrypt_transform": {
      "post": {
        "operationId": "vault_post_v2_encrypt_transform",
        "summary": "Encrypt data with FPE",
        "description": "Encrypt using a [Format Preserving Encryption (FPE)](https://pangea.cloud/docs/vault/use-keys/encrypt-and-decrypt/fpe) algorithm.",
        "tags": ["vault", "v2-keys"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id", "plain_text", "alphabet"],
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/vault-req-fpe-encryption-key-id"
                  },
                  "version": {
                    "$ref": "#/components/schemas/vault-req-key-version"
                  },
                  "plain_text": {
                    "$ref": "#/components/schemas/vault-req-fpe-plain-text"
                  },
                  "tweak": {
                    "$ref": "#/components/schemas/vault-tweak"
                  },
                  "alphabet": {
                    "$ref": "#/components/schemas/vault-alphabet"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Encrypted message",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "$ref": "#/components/schemas/vault-key-id"
                            },
                            "version": {
                              "$ref": "#/components/schemas/vault-encryption-key-version"
                            },
                            "algorithm": {
                              "$ref": "#/components/schemas/vault-encryption-key-algorithm"
                            },
                            "cipher_text": {
                              "$ref": "#/components/schemas/vault-fpe-cipher-text"
                            },
                            "tweak": {
                              "$ref": "#/components/schemas/vault-tweak"
                            },
                            "alphabet": {
                              "$ref": "#/components/schemas/vault-alphabet"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/decrypt_transform": {
      "post": {
        "operationId": "vault_post_v2_decrypt_transform",
        "summary": "Decrypt data with FPE",
        "description": "Decrypt using a [Format Preserving Encryption (FPE)](https://pangea.cloud/docs/vault/use-keys/encrypt-and-decrypt/fpe) algorithm.",
        "tags": ["vault", "v2-keys"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id", "cipher_text", "tweak", "alphabet"],
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/vault-req-decryption-key-id"
                  },
                  "version": {
                    "$ref": "#/components/schemas/vault-req-key-version"
                  },
                  "cipher_text": {
                    "$ref": "#/components/schemas/vault-req-fpe-cipher-text"
                  },
                  "tweak": {
                    "$ref": "#/components/schemas/vault-tweak"
                  },
                  "alphabet": {
                    "$ref": "#/components/schemas/vault-alphabet"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Decrypted message",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "$ref": "#/components/schemas/vault-key-id"
                            },
                            "version": {
                              "$ref": "#/components/schemas/vault-decryption-key-version"
                            },
                            "algorithm": {
                              "$ref": "#/components/schemas/vault-encryption-key-algorithm"
                            },
                            "plain_text": {
                              "$ref": "#/components/schemas/vault-req-fpe-plain-text"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/encrypt_transform_structured": {
      "post": {
        "operationId": "vault_post_v2_encrypt_transform_structured",
        "summary": "Encrypt structured JSON with FPE",
        "description": "Encrypt structured data using a Format Preserving Encryption (FPE) algorithm by selecting and encrypting parts of a JSON object with a [JSONPath](https://goessner.net/articles/JsonPath/) expression.\n\nFor example, use a JSONPath like `$.batch_input[*].ssn` to select elements in the following JSON document:\n```\n{\n    \"batch_input\": [\n        {\n            \"ssn\": \"123-45-6789\"\n        },\n        {\n            \"ssn\": \"987-65-4321\"\n        }\n    ]\n}\n```\n\nUsing this filter for encryption will return a JSON document where `123-45-6789` and `987-65-4321` are replaced with their FPE-encrypted values.\n\nFind additional information in the [Format Preserving Encryption (FPE)](https://pangea.cloud/docs/vault/use-keys/encrypt-and-decrypt/fpe), [Structured Data Encryption](https://pangea.cloud/docs/vault/use-keys/encrypt-and-decrypt/structured-data-encryption), and [JSON Path](https://pangea.cloud/docs/redact/using-redact/using-redact#about-jsonpath) documentation.",
        "tags": ["vault", "v2-keys"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id", "structured_data", "filter", "alphabet"],
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/vault-req-fpe-encryption-key-id"
                  },
                  "version": {
                    "$ref": "#/components/schemas/vault-req-key-version"
                  },
                  "additional_data": {
                    "$ref": "#/components/schemas/additional-data"
                  },
                  "tweak": {
                    "$ref": "#/components/schemas/vault-tweak"
                  },
                  "alphabet": {
                    "$ref": "#/components/schemas/vault-alphabet"
                  },
                  "structured_data": {
                    "$ref": "#/components/schemas/vault-structured-data"
                  },
                  "filter": {
                    "$ref": "#/components/schemas/vault-structured-filter"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Structured data encryption results",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "$ref": "#/components/schemas/vault-key-id"
                            },
                            "version": {
                              "$ref": "#/components/schemas/vault-encryption-key-version"
                            },
                            "algorithm": {
                              "$ref": "#/components/schemas/vault-encryption-key-algorithm"
                            },
                            "structured_data": {
                              "$ref": "#/components/schemas/vault-fpe-encrypted-structured-data"
                            },
                            "tweak": {
                              "$ref": "#/components/schemas/vault-tweak"
                            },
                            "alphabet": {
                              "$ref": "#/components/schemas/vault-alphabet"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/decrypt_transform_structured": {
      "post": {
        "operationId": "vault_post_v2_decrypt_transform_structured",
        "summary": "Decrypt structured JSON with FPE",
        "description": "Decrypt structured data by selecting FPE-encrypted parts of a JSON object using a [JSONPath](https://goessner.net/articles/JsonPath/) expression.\n\nFor example, use a JSONPath like `$.batch_input[*].ssn` to select FPE-encrypted elements in the following JSON document:\n```\n{\n    \"batch_input\": [\n        {\n            \"ssn\": \"987-65-4321\"\n        },\n        {\n            \"ssn\": \"123-45-6789\"\n        }\n    ]\n}\n```\n\nUsing this filter for decryption will return a JSON document with the FPE-encrypted values replaced by their decrypted counterparts.\n\nFind additional information in the [Format Preserving Encryption (FPE)](https://pangea.cloud/docs/vault/use-keys/encrypt-and-decrypt/fpe), [Structured Data Encryption](https://pangea.cloud/docs/vault/use-keys/encrypt-and-decrypt/structured-data-encryption), and [JSON Path](https://pangea.cloud/docs/redact/using-redact/using-redact#about-jsonpath) documentation.",
        "tags": ["vault", "v2-keys"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id", "structured_data", "filter", "alphabet"],
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/vault-req-structured-decryption-key-id"
                  },
                  "version": {
                    "$ref": "#/components/schemas/vault-req-key-version"
                  },
                  "structured_data": {
                    "$ref": "#/components/schemas/vault-fpe-encrypted-structured-data"
                  },
                  "filter": {
                    "$ref": "#/components/schemas/vault-structured-filter"
                  },
                  "additional_data": {
                    "$ref": "#/components/schemas/additional-data"
                  },
                  "tweak": {
                    "$ref": "#/components/schemas/vault-tweak"
                  },
                  "alphabet": {
                    "$ref": "#/components/schemas/vault-alphabet"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Structured data decryption results",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "$ref": "#/components/schemas/vault-key-id"
                            },
                            "version": {
                              "$ref": "#/components/schemas/vault-decryption-key-version"
                            },
                            "algorithm": {
                              "$ref": "#/components/schemas/vault-encryption-key-algorithm"
                            },
                            "structured_data": {
                              "$ref": "#/components/schemas/vault-structured-data"
                            },
                            "tweak": {
                              "$ref": "#/components/schemas/vault-tweak"
                            },
                            "alphabet": {
                              "$ref": "#/components/schemas/vault-alphabet"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/sign": {
      "post": {
        "operationId": "vault_post_v2_sign",
        "summary": "Sign data",
        "description": "Sign a message using a key for creating and verifying cryptographic signatures.",
        "tags": ["vault", "v2-keys"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id", "message"],
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/vault-req-signing-key-id"
                  },
                  "version": {
                    "$ref": "#/components/schemas/vault-req-key-version"
                  },
                  "message": {
                    "$ref": "#/components/schemas/vault-sign-message"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Signature of the message",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "$ref": "#/components/schemas/vault-signing-key-id"
                            },
                            "version": {
                              "$ref": "#/components/schemas/vault-signing-key-version"
                            },
                            "algorithm": {
                              "$ref": "#/components/schemas/vault-signing-key-algorithm"
                            },
                            "signature": {
                              "$ref": "#/components/schemas/vault-signature"
                            },
                            "public_key": {
                              "$ref": "#/components/schemas/vault-public-key"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/verify": {
      "post": {
        "operationId": "vault_post_v2_verify",
        "summary": "Verify signature",
        "description": "Verify a signature using a key for creating and verifying cryptographic signatures.",
        "tags": ["vault", "v2-keys"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id", "message", "signature"],
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/vault-req-signing-verification-key-id"
                  },
                  "version": {
                    "$ref": "#/components/schemas/vault-req-key-version"
                  },
                  "message": {
                    "$ref": "#/components/schemas/vault-req-message"
                  },
                  "signature": {
                    "$ref": "#/components/schemas/vault-req-signature"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Result of the signature verification",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "$ref": "#/components/schemas/vault-signing-key-id"
                            },
                            "version": {
                              "$ref": "#/components/schemas/vault-signing-key-version"
                            },
                            "algorithm": {
                              "$ref": "#/components/schemas/vault-signing-key-algorithm"
                            },
                            "valid_signature": {
                              "$ref": "#/components/schemas/vault-valid-signature"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/key/store": {
      "post": {
        "operationId": "vault_post_v2_key_store",
        "summary": "Store key",
        "description": "Import and store a symmetric or asymmetric key as a Vault item.",
        "tags": ["vault", "v2-keys"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/vault-v2-store-asymmetric-key-request"
                  },
                  {
                    "$ref": "#/components/schemas/vault-v2-store-symmetric-key-request"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Imported Vault key",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "oneOf": [
                            {
                              "$ref": "#/components/schemas/v2-asymmetric-key"
                            },
                            {
                              "$ref": "#/components/schemas/v2-symmetric-key"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/folder/create": {
      "post": {
        "operationId": "vault_post_v2_folder_create",
        "summary": "Create folder",
        "description": "Create a folder with the specified name within the provided parent `folder`.",
        "tags": ["vault", "v2-folders"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["folder", "name"],
                "properties": {
                  "name": {
                    "$ref": "#/components/schemas/vault-folder-name"
                  },
                  "folder": {
                    "$ref": "#/components/schemas/vault-folder-folder"
                  },
                  "metadata": {
                    "$ref": "#/components/schemas/vault-user-metadata"
                  },
                  "tags": {
                    "$ref": "#/components/schemas/vault-tags"
                  },
                  "rotation_frequency": {
                    "$ref": "#/components/schemas/vault-req-rotation-frequency"
                  },
                  "rotation_state": {
                    "$ref": "#/components/schemas/vault-req-folder-rotation-state"
                  },
                  "rotation_grace_period": {
                    "$ref": "#/components/schemas/vault-req-rotation-grace-period"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created Vault folder item",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "$ref": "#/components/schemas/v2-folder"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/jwt/sign": {
      "post": {
        "operationId": "vault_post_v2_jwt_sign",
        "summary": "Sign JWT",
        "description": "Sign a JSON Web Token (JWT) using a private asymmetric signing key.",
        "tags": ["vault", "v2-jwt"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id", "payload"],
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/vault-req-key-id"
                  },
                  "payload": {
                    "$ref": "#/components/schemas/vault-jwt-payload"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "JWT signed with the given private asymmetric signing key",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "jws": {
                              "$ref": "#/components/schemas/vault-jws"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/jwt/verify": {
      "post": {
        "operationId": "vault_post_v2_jwt_verify",
        "summary": "Verify JWT",
        "description": "Verify a JSON Web Token (JWT) signature is valid using the public signing key.",
        "tags": ["vault", "v2-jwt"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["jws"],
                "properties": {
                  "jws": {
                    "$ref": "#/components/schemas/vault-jws"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Result of the JWT signature verification",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "valid_signature": {
                              "$ref": "#/components/schemas/vault-valid-signature"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v2/jwk/get": {
      "post": {
        "operationId": "vault_post_v2_jwk_get",
        "summary": "Get JWKS",
        "description": "Retrieve a public key and associated metadata in JSON Web Key (JWK) format.",
        "tags": ["vault", "v2-jwt"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id"],
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/vault-req-key-id"
                  },
                  "version": {
                    "$ref": "#/components/schemas/vault-req-multiple-versions-v2"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Keys in JWK format",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "type": "object",
                          "description": "JSON Web Key Set (JWKS) object containing one or more JSON Web Keys (JWK). The key version is indicated in the \"kid\" value after the `|` delimiter. Fields with key information are encoded in Base64URL format.",
                          "properties": {
                            "keys": {
                              "type": "array",
                              "items": {
                                "type": "object"
                              },
                              "description": "JSON Web Key Set (JWKS) object"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/get": {
      "post": {
        "operationId": "vault_post_v1_get",
        "summary": "Get Vault item",
        "description": "Retrieve details for a key, secret, token, or folder.",
        "tags": ["vault", "v1-general"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vault-get-request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Vault item details",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "oneOf": [
                            {
                              "$ref": "#/components/schemas/vault-get-asymmetric-key-response"
                            },
                            {
                              "$ref": "#/components/schemas/vault-get-symmetric-key-response"
                            },
                            {
                              "$ref": "#/components/schemas/vault-get-secret-response"
                            },
                            {
                              "$ref": "#/components/schemas/vault-get-token-response"
                            },
                            {
                              "$ref": "#/components/schemas/vault-get-client-secret-response"
                            },
                            {
                              "$ref": "#/components/schemas/vault-get-pangea-platform-client-secret-response"
                            },
                            {
                              "$ref": "#/components/schemas/vault-get-folder-response"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/list": {
      "post": {
        "operationId": "vault_post_v1_list",
        "summary": "List",
        "description": "Retrieve an array of Vault items matching a given filter, including secrets, keys, tokens, and folders, along with their common details.",
        "tags": ["vault", "v1-general"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [],
                "properties": {
                  "filter": {
                    "$ref": "#/components/schemas/vault-list-filter"
                  },
                  "size": {
                    "$ref": "#/components/schemas/vault-list-size"
                  },
                  "order": {
                    "$ref": "#/components/schemas/vault-list-order"
                  },
                  "order_by": {
                    "$ref": "#/components/schemas/vault-list-order-by"
                  },
                  "last": {
                    "$ref": "#/components/schemas/vault-req-list-last"
                  },
                  "include_secrets": {
                    "type": "boolean",
                    "description": "Include secret value for all items of type 'secret'",
                    "default": false
                  },
                  "include": {
                    "type": "array",
                    "description": "Include additional information in the response",
                    "items": {
                      "type": "string",
                      "enum": ["secrets", "encrypted"]
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Array of Vault items matching a given filter, including secrets, keys, tokens, and folders, along with their common details",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "$ref": "#/components/schemas/vault-id"
                                  },
                                  "type": {
                                    "$ref": "#/components/schemas/vault-type"
                                  },
                                  "name": {
                                    "$ref": "#/components/schemas/vault-name"
                                  },
                                  "folder": {
                                    "$ref": "#/components/schemas/vault-folder"
                                  },
                                  "created_at": {
                                    "$ref": "#/components/schemas/vault-created-at"
                                  },
                                  "tags": {
                                    "$ref": "#/components/schemas/vault-tags"
                                  },
                                  "metadata": {
                                    "$ref": "#/components/schemas/vault-metadata"
                                  },
                                  "last_rotated": {
                                    "$ref": "#/components/schemas/vault-last-rotated"
                                  },
                                  "next_rotation": {
                                    "$ref": "#/components/schemas/vault-next-rotation"
                                  },
                                  "expiration": {
                                    "$ref": "#/components/schemas/vault-expiration"
                                  },
                                  "rotation_frequency": {
                                    "$ref": "#/components/schemas/vault-rotation-frequency"
                                  },
                                  "rotation_state": {
                                    "$ref": "#/components/schemas/vault-rotation-state"
                                  },
                                  "item_state": {
                                    "$ref": "#/components/schemas/vault-item-state"
                                  },
                                  "current_version": {
                                    "$ref": "#/components/schemas/vault-version"
                                  },
                                  "algorithm": {
                                    "type": "string",
                                    "description": "Algorithm, applicable only if the item is a key",
                                    "examples": ["ES256"]
                                  },
                                  "purpose": {
                                    "type": "string",
                                    "description": "Purpose, applicable only if the item is a key",
                                    "examples": ["encryption"]
                                  },
                                  "inherited_settings": {
                                    "$ref": "#/components/schemas/vault-inherited-settings"
                                  },
                                  "compromised_versions": {
                                    "type": "array",
                                    "items": {
                                      "$ref": "#/components/schemas/vault-list-item-version"
                                    }
                                  }
                                }
                              }
                            },
                            "count": {
                              "$ref": "#/components/schemas/vault-list-count"
                            },
                            "last": {
                              "$ref": "#/components/schemas/vault-list-last"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/update": {
      "post": {
        "operationId": "vault_post_v1_update",
        "summary": "Update",
        "description": "Update information associated with a key, secret, token, or folder.",
        "tags": ["vault", "v1-general"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/vault-update-item"
                  },
                  {
                    "$ref": "#/components/schemas/vault-update-folder"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ID of the updated vault item",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "$ref": "#/components/schemas/vault-id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/delete": {
      "post": {
        "operationId": "vault_post_v1_delete",
        "summary": "Delete",
        "description": "Delete a key, secret, token, or folder.",
        "tags": ["vault", "v1-general"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id"],
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/vault-req-id"
                  },
                  "recursive": {
                    "$ref": "#/components/schemas/vault-delete-recursive"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ID of the deleted Vault item",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "$ref": "#/components/schemas/vault-id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/export": {
      "post": {
        "operationId": "vault_post_v1_export",
        "summary": "Export",
        "description": "Export a symmetric or asymmetric key marked as exportable when added to Vault.",
        "tags": ["vault", "v1-general"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vault-export-request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Exported Vault key or key pair materials",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "oneOf": [
                            {
                              "$ref": "#/components/schemas/vault-export-asymmetric-key-response"
                            },
                            {
                              "$ref": "#/components/schemas/vault-export-symmetric-key-response"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/state/change": {
      "post": {
        "operationId": "vault_post_v1_state_change",
        "summary": "Change state",
        "description": "Change the state of a version of a Vault key, secret, or token.",
        "tags": ["vault", "v1-general"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id", "state"],
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/vault-req-key-secret-token-id"
                  },
                  "version": {
                    "$ref": "#/components/schemas/vault-req-key-secret-token-version"
                  },
                  "state": {
                    "$ref": "#/components/schemas/vault-req-state"
                  },
                  "destroy_period": {
                    "$ref": "#/components/schemas/vault-req-destroy-period"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Vault key, secret, or token with the changed state",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "$ref": "#/components/schemas/vault-id"
                            },
                            "version": {
                              "$ref": "#/components/schemas/vault-version"
                            },
                            "state": {
                              "$ref": "#/components/schemas/vault-item-version-state"
                            },
                            "destroy_at": {
                              "$ref": "#/components/schemas/vault-item-version-destroy-at"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/secret/rotate": {
      "post": {
        "operationId": "vault_post_v1_secret_rotate",
        "summary": "Rotate certificate",
        "description": "Rotate a secret.",
        "tags": ["vault", "v1-secrets"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/vault-rotate-secret-request"
                  },
                  {
                    "$ref": "#/components/schemas/vault-rotate-token-request"
                  },
                  {
                    "$ref": "#/components/schemas/vault-rotate-client-secret-request"
                  },
                  {
                    "$ref": "#/components/schemas/vault-rotate-pangea-platform-client-secret-request"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New version of the secret has been generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "oneOf": [
                            {
                              "$ref": "#/components/schemas/vault-rotate-secret-response"
                            },
                            {
                              "$ref": "#/components/schemas/vault-rotate-token-response"
                            },
                            {
                              "$ref": "#/components/schemas/vault-rotate-client-secret-response"
                            },
                            {
                              "$ref": "#/components/schemas/vault-rotate-pangea-platform-client-secret-response"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/secret/store": {
      "post": {
        "operationId": "vault_post_v1_secret_store",
        "summary": "Store secret",
        "description": "Store a secret or token as a Vault item.",
        "tags": ["vault", "v1-secrets"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/vault-store-secret-request"
                  },
                  {
                    "$ref": "#/components/schemas/vault-store-token-request"
                  },
                  {
                    "$ref": "#/components/schemas/vault-store-client-secret-request"
                  },
                  {
                    "$ref": "#/components/schemas/vault-store-pangea-platform-client-secret-request"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Secret or token stored as a Vault item.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "oneOf": [
                            {
                              "$ref": "#/components/schemas/vault-store-secret-response"
                            },
                            {
                              "$ref": "#/components/schemas/vault-store-token-response"
                            },
                            {
                              "$ref": "#/components/schemas/vault-store-client-secret-response"
                            },
                            {
                              "$ref": "#/components/schemas/vault-store-pangea-platform-client-secret-response"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/key/generate": {
      "post": {
        "operationId": "vault_post_v1_key_generate",
        "summary": "Generate key",
        "description": "Generate a symmetric or asymmetric key.",
        "tags": ["vault", "v1-keys"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/vault-generate-asymmetric-key-request"
                  },
                  {
                    "$ref": "#/components/schemas/vault-generate-symmetric-key-request"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Key material",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "oneOf": [
                            {
                              "$ref": "#/components/schemas/vault-generate-asymmetric-key-response"
                            },
                            {
                              "$ref": "#/components/schemas/vault-generate-symmetric-key-response"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/key/rotate": {
      "post": {
        "operationId": "vault_post_v1_key_rotate",
        "summary": "Rotate key",
        "description": "Manually rotate a symmetric or asymmetric key. Optionally, provide new key value(s) created using the same algorithm as the original key.",
        "tags": ["vault", "v1-keys"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/vault-rotate-symmetric-key-request"
                  },
                  {
                    "$ref": "#/components/schemas/vault-rotate-asymmetric-key-request"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Key material for the new key version",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "oneOf": [
                            {
                              "$ref": "#/components/schemas/vault-rotate-symmetric-key-response"
                            },
                            {
                              "$ref": "#/components/schemas/vault-rotate-asymmetric-key-response"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/key/encrypt": {
      "post": {
        "operationId": "vault_post_v1_key_encrypt",
        "summary": "Encrypt",
        "description": "Encrypt a message using a key created for encryption purposes.",
        "tags": ["vault", "v1-keys"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id", "plain_text"],
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/vault-req-encryption-key-id"
                  },
                  "version": {
                    "$ref": "#/components/schemas/vault-req-key-version"
                  },
                  "plain_text": {
                    "$ref": "#/components/schemas/vault-req-plain-text"
                  },
                  "additional_data": {
                    "$ref": "#/components/schemas/additional-data"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Encryption results",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "$ref": "#/components/schemas/vault-key-id"
                            },
                            "version": {
                              "$ref": "#/components/schemas/vault-encryption-key-version"
                            },
                            "algorithm": {
                              "$ref": "#/components/schemas/vault-decryption-key-algorithm"
                            },
                            "cipher_text": {
                              "$ref": "#/components/schemas/vault-cipher-text"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/key/decrypt": {
      "post": {
        "operationId": "vault_post_v1_key_decrypt",
        "summary": "Decrypt",
        "description": "Decrypt a message using the same key that was used for encryption.",
        "tags": ["vault", "v1-keys"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id", "cipher_text"],
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/vault-req-decryption-key-id"
                  },
                  "version": {
                    "$ref": "#/components/schemas/vault-req-key-version"
                  },
                  "cipher_text": {
                    "$ref": "#/components/schemas/vault-req-cipher-text"
                  },
                  "additional_data": {
                    "$ref": "#/components/schemas/additional-data"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Decryption results",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "$ref": "#/components/schemas/vault-key-id"
                            },
                            "version": {
                              "$ref": "#/components/schemas/vault-decryption-key-version"
                            },
                            "algorithm": {
                              "$ref": "#/components/schemas/vault-encryption-key-algorithm"
                            },
                            "plain_text": {
                              "$ref": "#/components/schemas/vault-plain-text"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/key/encrypt/structured": {
      "post": {
        "operationId": "vault_post_v1_key_encrypt_structured",
        "summary": "Encrypt structured data",
        "description": "Encrypt structured data by selecting and encrypting parts of a JSON object using a [JSONPath](https://goessner.net/articles/JsonPath/) expression.\n\nFor example, use a JSONPath like `$.batch_input[*].ssn` to select elements in the following JSON document:\n```\n{\n    \"batch_input\": [\n        {\n            \"ssn\": \"123-45-6789\"\n        },\n        {\n            \"ssn\": \"987-65-4321\"\n        }\n    ]\n}\n```\n\nUsing this filter for encryption will return a JSON document where `123-45-6789` and `987-65-4321` are replaced with their encrypted values.\n\nFind additional details in the [Structured Data Encryption](https://pangea.cloud/docs/vault/use-keys/encrypt-and-decrypt/structured-data-encryption) and [JSON Path](https://pangea.cloud/docs/redact/using-redact/using-redact#about-jsonpath) documentation.",
        "tags": ["vault", "v1-keys"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id", "structured_data", "filter"],
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/vault-req-encryption-key-id"
                  },
                  "version": {
                    "$ref": "#/components/schemas/vault-req-key-version"
                  },
                  "additional_data": {
                    "$ref": "#/components/schemas/additional-data"
                  },
                  "structured_data": {
                    "$ref": "#/components/schemas/vault-structured-data"
                  },
                  "filter": {
                    "$ref": "#/components/schemas/vault-structured-filter"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Structured data encryption results",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "$ref": "#/components/schemas/vault-id"
                            },
                            "version": {
                              "$ref": "#/components/schemas/vault-encryption-key-version"
                            },
                            "algorithm": {
                              "$ref": "#/components/schemas/vault-symmetric-key-algorithm"
                            },
                            "structured_data": {
                              "$ref": "#/components/schemas/vault-encrypted-structured-data"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/key/decrypt/structured": {
      "post": {
        "operationId": "vault_post_v1_key_decrypt_structured",
        "summary": "Decrypt structured",
        "description": "Decrypt structured data by selecting encrypted parts of a JSON object using a [JSONPath](https://goessner.net/articles/JsonPath/) expression.\n\nFor example, use a JSONPath like `$.batch_input[*].ssn` to select encrypted elements in the following JSON document:\n```\n{\n    \"batch_input\": [\n        {\n            \"ssn\": \"CwAAAIfgVg2uv98KIMhAS17DQfznWEA8yXTqLvZFaXDafQIu\"\n        },\n        {\n            \"ssn\": \"CwAAADIqwKdF8LQc9SlAFvyf+G4wvsCgurmuVIWad9Ip5tl2\"\n        }\n    ]\n}\n```\n\nUsing this filter for decryption will return a JSON document with the encrypted values replaced by their decrypted counterparts.\n\nFind additional details in the [Structured Data Encryption](https://pangea.cloud/docs/vault/use-keys/encrypt-and-decrypt/structured-data-encryption) and [JSON Path](https://pangea.cloud/docs/redact/using-redact/using-redact#about-jsonpath) documentation.",
        "tags": ["vault", "v1-keys"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id", "structured_data", "filter"],
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/vault-req-structured-decryption-key-id"
                  },
                  "version": {
                    "$ref": "#/components/schemas/vault-req-key-version"
                  },
                  "structured_data": {
                    "$ref": "#/components/schemas/vault-encrypted-structured-data"
                  },
                  "filter": {
                    "$ref": "#/components/schemas/vault-structured-filter"
                  },
                  "additional_data": {
                    "$ref": "#/components/schemas/additional-data"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Structured data decryption results",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "$ref": "#/components/schemas/vault-id"
                            },
                            "version": {
                              "$ref": "#/components/schemas/vault-decryption-key-version"
                            },
                            "algorithm": {
                              "$ref": "#/components/schemas/vault-symmetric-key-algorithm"
                            },
                            "structured_data": {
                              "$ref": "#/components/schemas/vault-structured-data"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/key/encrypt/transform": {
      "post": {
        "operationId": "vault_post_v1_key_encrypt_transform",
        "summary": "Encrypt using FPE",
        "description": "Encrypt using a [Format Preserving Encryption (FPE)](https://pangea.cloud/docs/vault/use-keys/encrypt-and-decrypt/fpe) algorithm.",
        "tags": ["vault", "v1-keys"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id", "plain_text", "alphabet"],
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/vault-req-fpe-encryption-key-id"
                  },
                  "version": {
                    "$ref": "#/components/schemas/vault-req-key-version"
                  },
                  "plain_text": {
                    "$ref": "#/components/schemas/vault-req-fpe-plain-text"
                  },
                  "tweak": {
                    "$ref": "#/components/schemas/vault-tweak"
                  },
                  "alphabet": {
                    "$ref": "#/components/schemas/vault-alphabet"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Encrypted message",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "$ref": "#/components/schemas/vault-key-id"
                            },
                            "version": {
                              "$ref": "#/components/schemas/vault-encryption-key-version"
                            },
                            "algorithm": {
                              "$ref": "#/components/schemas/vault-encryption-key-algorithm"
                            },
                            "cipher_text": {
                              "$ref": "#/components/schemas/vault-fpe-cipher-text"
                            },
                            "tweak": {
                              "$ref": "#/components/schemas/vault-tweak"
                            },
                            "alphabet": {
                              "$ref": "#/components/schemas/vault-alphabet"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/key/decrypt/transform": {
      "post": {
        "operationId": "vault_post_v1_key_decrypt_transform",
        "summary": "Decrypt using FPE",
        "description": "Decrypt using a [Format Preserving Encryption (FPE)](https://pangea.cloud/docs/vault/use-keys/encrypt-and-decrypt/fpe) algorithm.",
        "tags": ["vault", "v1-keys"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id", "cipher_text", "tweak", "alphabet"],
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/vault-req-decryption-key-id"
                  },
                  "version": {
                    "$ref": "#/components/schemas/vault-req-key-version"
                  },
                  "cipher_text": {
                    "$ref": "#/components/schemas/vault-req-fpe-cipher-text"
                  },
                  "tweak": {
                    "$ref": "#/components/schemas/vault-tweak"
                  },
                  "alphabet": {
                    "$ref": "#/components/schemas/vault-alphabet"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Decrypted message",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "$ref": "#/components/schemas/vault-key-id"
                            },
                            "version": {
                              "$ref": "#/components/schemas/vault-decryption-key-version"
                            },
                            "algorithm": {
                              "$ref": "#/components/schemas/vault-encryption-key-algorithm"
                            },
                            "plain_text": {
                              "$ref": "#/components/schemas/vault-req-fpe-plain-text"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/key/encrypt/transform/structured": {
      "post": {
        "operationId": "vault_post_v1_key_encrypt_transform_structured",
        "summary": "Encrypt structured data using FPE",
        "description": "Encrypt structured data using a Format Preserving Encryption (FPE) algorithm by selecting and encrypting parts of a JSON object with a [JSONPath](https://goessner.net/articles/JsonPath/) expression.\n\nFor example, use a JSONPath like `$.batch_input[*].ssn` to select elements in the following JSON document:\n```\n{\n    \"batch_input\": [\n        {\n            \"ssn\": \"123-45-6789\"\n        },\n        {\n            \"ssn\": \"987-65-4321\"\n        }\n    ]\n}\n```\n\nUsing this filter for encryption will return a JSON document where `123-45-6789` and `987-65-4321` are replaced with their FPE-encrypted values.\n\nFind additional information in the [Format Preserving Encryption (FPE)](https://pangea.cloud/docs/vault/use-keys/encrypt-and-decrypt/fpe), [Structured Data Encryption](https://pangea.cloud/docs/vault/use-keys/encrypt-and-decrypt/structured-data-encryption), and [JSON Path](https://pangea.cloud/docs/redact/using-redact/using-redact#about-jsonpath) documentation.",
        "tags": ["vault", "v1-keys"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id", "structured_data", "filter", "alphabet"],
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/vault-req-fpe-encryption-key-id"
                  },
                  "version": {
                    "$ref": "#/components/schemas/vault-req-key-version"
                  },
                  "additional_data": {
                    "$ref": "#/components/schemas/additional-data"
                  },
                  "tweak": {
                    "$ref": "#/components/schemas/vault-tweak"
                  },
                  "alphabet": {
                    "$ref": "#/components/schemas/vault-alphabet"
                  },
                  "structured_data": {
                    "$ref": "#/components/schemas/vault-structured-data"
                  },
                  "filter": {
                    "$ref": "#/components/schemas/vault-structured-filter"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Structured data encryption results",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "$ref": "#/components/schemas/vault-key-id"
                            },
                            "version": {
                              "$ref": "#/components/schemas/vault-encryption-key-version"
                            },
                            "algorithm": {
                              "$ref": "#/components/schemas/vault-encryption-key-algorithm"
                            },
                            "structured_data": {
                              "$ref": "#/components/schemas/vault-fpe-encrypted-structured-data"
                            },
                            "tweak": {
                              "$ref": "#/components/schemas/vault-tweak"
                            },
                            "alphabet": {
                              "$ref": "#/components/schemas/vault-alphabet"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/key/decrypt/transform/structured": {
      "post": {
        "operationId": "vault_post_v1_key_decrypt_transform_structured",
        "summary": "Decrypt structured data using FPE",
        "description": "Decrypt structured data by selecting FPE-encrypted parts of a JSON object using a [JSONPath](https://goessner.net/articles/JsonPath/) expression.\n\nFor example, use a JSONPath like `$.batch_input[*].ssn` to select FPE-encrypted elements in the following JSON document:\n```\n{\n    \"batch_input\": [\n        {\n            \"ssn\": \"987-65-4321\"\n        },\n        {\n            \"ssn\": \"123-45-6789\"\n        }\n    ]\n}\n```\n\nUsing this filter for decryption will return a JSON document with the FPE-encrypted values replaced by their decrypted counterparts.\n\nFind additional information in the [Format Preserving Encryption (FPE)](https://pangea.cloud/docs/vault/use-keys/encrypt-and-decrypt/fpe), [Structured Data Encryption](https://pangea.cloud/docs/vault/use-keys/encrypt-and-decrypt/structured-data-encryption), and [JSON Path](https://pangea.cloud/docs/redact/using-redact/using-redact#about-jsonpath) documentation.",
        "tags": ["vault", "v1-keys"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id", "structured_data", "filter", "alphabet"],
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/vault-req-structured-decryption-key-id"
                  },
                  "version": {
                    "$ref": "#/components/schemas/vault-req-key-version"
                  },
                  "structured_data": {
                    "$ref": "#/components/schemas/vault-fpe-encrypted-structured-data"
                  },
                  "filter": {
                    "$ref": "#/components/schemas/vault-structured-filter"
                  },
                  "additional_data": {
                    "$ref": "#/components/schemas/additional-data"
                  },
                  "tweak": {
                    "$ref": "#/components/schemas/vault-tweak"
                  },
                  "alphabet": {
                    "$ref": "#/components/schemas/vault-alphabet"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Structured data decryption results",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "$ref": "#/components/schemas/vault-key-id"
                            },
                            "version": {
                              "$ref": "#/components/schemas/vault-decryption-key-version"
                            },
                            "algorithm": {
                              "$ref": "#/components/schemas/vault-encryption-key-algorithm"
                            },
                            "structured_data": {
                              "$ref": "#/components/schemas/vault-structured-data"
                            },
                            "tweak": {
                              "$ref": "#/components/schemas/vault-tweak"
                            },
                            "alphabet": {
                              "$ref": "#/components/schemas/vault-alphabet"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/key/sign": {
      "post": {
        "operationId": "vault_post_v1_key_sign",
        "summary": "Sign",
        "description": "Sign a message using a key for creating and verifying cryptographic signatures.",
        "tags": ["vault", "v1-keys"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id", "message"],
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/vault-req-signing-key-id"
                  },
                  "version": {
                    "$ref": "#/components/schemas/vault-req-key-version"
                  },
                  "message": {
                    "$ref": "#/components/schemas/vault-sign-message"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Signature of the message",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "$ref": "#/components/schemas/vault-signing-key-id"
                            },
                            "version": {
                              "$ref": "#/components/schemas/vault-signing-key-version"
                            },
                            "algorithm": {
                              "$ref": "#/components/schemas/vault-signing-key-algorithm"
                            },
                            "signature": {
                              "$ref": "#/components/schemas/vault-signature"
                            },
                            "public_key": {
                              "$ref": "#/components/schemas/vault-public-key"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/key/verify": {
      "post": {
        "operationId": "vault_post_v1_key_verify",
        "summary": "Verify signature",
        "description": "Verify a signature using a key for creating and verifying cryptographic signatures.",
        "tags": ["vault", "v1-keys"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id", "message", "signature"],
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/vault-req-signing-verification-key-id"
                  },
                  "version": {
                    "$ref": "#/components/schemas/vault-req-key-version"
                  },
                  "message": {
                    "$ref": "#/components/schemas/vault-req-message"
                  },
                  "signature": {
                    "$ref": "#/components/schemas/vault-req-signature"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Result of the signature verification",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "$ref": "#/components/schemas/vault-signing-key-id"
                            },
                            "version": {
                              "$ref": "#/components/schemas/vault-signing-key-version"
                            },
                            "algorithm": {
                              "$ref": "#/components/schemas/vault-signing-key-algorithm"
                            },
                            "valid_signature": {
                              "$ref": "#/components/schemas/vault-valid-signature"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/key/store": {
      "post": {
        "operationId": "vault_post_v1_key_store",
        "summary": "Store key",
        "description": "Import a symmetric or asymmetric key.",
        "tags": ["vault", "v1-keys"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/vault-store-asymmetric-key-request"
                  },
                  {
                    "$ref": "#/components/schemas/vault-store-symmetric-key-request"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Imported key pair.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "oneOf": [
                            {
                              "$ref": "#/components/schemas/vault-store-asymmetric-key-response"
                            },
                            {
                              "$ref": "#/components/schemas/vault-store-symmetric-key-response"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/folder/create": {
      "post": {
        "operationId": "vault_post_v1_folder_create",
        "summary": "Create a folder",
        "description": "Create a folder in Vault.",
        "tags": ["vault", "v1-folders"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vault-create-folder-request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ID of the created Vault folder",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "$ref": "#/components/schemas/vault-req-id"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/key/sign/jwt": {
      "post": {
        "operationId": "vault_post_v1_key_sign_jwt",
        "summary": "Sign JWT",
        "description": "Sign a JSON Web Token (JWT) using a key.",
        "tags": ["vault", "v1-jwt"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id", "payload"],
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/vault-req-id"
                  },
                  "payload": {
                    "$ref": "#/components/schemas/vault-jwt-payload"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "JWT signed with the provided private asymmetric signing key",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "jws": {
                              "$ref": "#/components/schemas/vault-jws"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/key/verify/jwt": {
      "post": {
        "operationId": "vault_post_v1_key_verify_jwt",
        "summary": "Verify JWT",
        "description": "Verify the signature of a JSON Web Token (JWT).",
        "tags": ["vault", "v1-jwt"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["jws"],
                "properties": {
                  "jws": {
                    "$ref": "#/components/schemas/vault-jws"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Result of the JWT signature verification",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "valid_signature": {
                              "$ref": "#/components/schemas/vault-valid-signature"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/get/jwk": {
      "post": {
        "operationId": "vault_post_v1_get_jwk",
        "summary": "Get JWKS",
        "description": "Retrieve a public key and associated metadata in JSON Web Key (JWK) format.",
        "tags": ["vault", "v1-jwt"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id"],
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/vault-req-key-id"
                  },
                  "version": {
                    "$ref": "#/components/schemas/vault-req-multiple-versions"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Keys in JWK format",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "type": "object",
                          "description": "JSON Web Key Set (JWKS) object containing one or more JSON Web Keys (JWK). The key version is indicated in the \"kid\" value after the `|` delimiter. Fields with key information are encoded in Base64URL format.",
                          "properties": {
                            "keys": {
                              "type": "array",
                              "items": {
                                "type": "object"
                              },
                              "description": "JSON Web Key Set (JWKS) object"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "$ref": "#/components/schemas/pangea-validation-errors"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/request/{requestId}": {
      "get": {
        "operationId": "get_async_request",
        "summary": "Get an asynchronous request",
        "description": "Will retrieve the result, or will return 202 if the original request is still in progress",
        "tags": ["vault"],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "The request ID to poll",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Asynchronous request in progress",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/pangea-response"
                    },
                    {
                      "properties": {
                        "result": {
                          "type": "object",
                          "properties": {
                            "ttl_mins": {
                              "type": "integer"
                            },
                            "retry_counter": {
                              "type": "integer"
                            },
                            "location": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pangea-response"
                }
              }
            }
          }
        }
      }
    }
  },
  "openapi": "3.1.0",
  "components": {
    "schemas": {
      "pangea-response": {
        "title": "Response Schema",
        "description": "Pangea standard response schema",
        "type": "object",
        "required": ["request_id", "request_time", "response_time", "status"],
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique identifier assigned to each request made to the API. It is used to track and identify a specific request and its associated data. The `request_id` can be helpful for troubleshooting, auditing, and tracing the flow of requests within the system. It allows users to reference and retrieve information related to a particular request, such as the response, parameters, and raw data associated with that specific request.\n\n```\n\"request_id\":\"prq_x6fdiizbon6j3bsdvnpmwxsz2aan7fqd\"\n```"
          },
          "request_time": {
            "type": "string",
            "description": "The timestamp indicates the exact moment when a request is made to the API. It represents the date and time at which the request was initiated by the client. The `request_time` is useful for tracking and analyzing the timing of requests, measuring response times, and monitoring performance metrics. It allows users to determine the duration between the request initiation and the corresponding response, aiding in the assessment of API performance and latency.\n\n```\n\"request_time\":\"2022-09-21T17:24:33.105Z\"\n```"
          },
          "response_time": {
            "type": "string",
            "description": "Duration it takes for the API to process a request and generate a response. It represents the elapsed time from when the request is received by the API to when the corresponding response is returned to the client.\n\n```\n\"response_time\":\"2022-09-21T17:24:34.007Z\"\n```"
          },
          "status": {
            "type": "string",
            "enum": ["Success"],
            "description": "It represents the status or outcome of the API request made for IP information. It indicates the current state or condition of the request and provides information on the success or failure of the request.\n\n```\n\"status\":\"success\"\n```"
          },
          "summary": {
            "type": "string",
            "description": "Provides a concise and brief overview of the purpose or primary objective of the API endpoint. It serves as a high-level summary or description of the functionality or feature offered by the endpoint."
          },
          "result": {
            "type": "object"
          }
        },
        "examples": [
          {
            "request_id": "prq_x6fdiizbon6j3bsdvnpmwxsz2aan7fqd",
            "request_time": "2022-09-21T17:24:33.105Z",
            "response_time": "2022-09-21T17:24:34.007Z",
            "status": "success"
          }
        ]
      },
      "pangea-validation-errors": {
        "$ref": "#/components/schemas/pangea-response",
        "required": ["result"],
        "properties": {
          "result": {
            "type": "object",
            "required": ["errors"],
            "properties": {
              "errors": {
                "type": "array",
                "minItems": 1,
                "items": {
                  "type": "object",
                  "required": ["code", "detail", "source"],
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "FieldRequired",
                        "InvalidString",
                        "InvalidNumber",
                        "InvalidInteger",
                        "InvalidObject",
                        "InvalidArray",
                        "InvalidNull",
                        "InvalidBool",
                        "BadFormat",
                        "BadFormatPangeaDuration",
                        "BadFormatDateTime",
                        "BadFormatTime",
                        "BadFormatDate",
                        "BadFormatEmail",
                        "BadFormatHostname",
                        "BadFormatIPv4",
                        "BadFormatIPv6",
                        "BadFormatIPAddress",
                        "BadFormatUUID",
                        "BadFormatURI",
                        "BadFormatURIReference",
                        "BadFormatIRI",
                        "BadFormatIRIReference",
                        "BadFormatJSONPointer",
                        "BadFormatRelativeJSONPointer",
                        "BadFormatRegex",
                        "BadFormatJSONPath",
                        "BadFormatBase64",
                        "DoesNotMatchPattern",
                        "DoesNotMatchPatternProperties",
                        "NotEnumMember",
                        "AboveMaxLength",
                        "BelowMinLength",
                        "AboveMaxItems",
                        "BelowMinItems",
                        "NotMultipleOf",
                        "NotWithinRange",
                        "UnexpectedProperty",
                        "InvalidPropertyName",
                        "AboveMaxProperties",
                        "BelowMinProperties",
                        "NotContains",
                        "ContainsTooMany",
                        "ContainsTooFew",
                        "ItemNotUnique",
                        "UnexpectedAdditionalItem",
                        "InvalidConst",
                        "IsDependentOn",
                        "IsTooBig",
                        "IsTooSmall",
                        "ShouldNotBeValid",
                        "NoUnevaluatedItems",
                        "NoUnevaluatedProperties",
                        "DoesNotExist",
                        "IsReadOnly",
                        "CannotAddToDefault",
                        "MustProvideOne",
                        "MutuallyExclusive",
                        "BadState",
                        "InaccessibleURI",
                        "ProviderDisabled",
                        "ConfigProjectMismatch",
                        "ConfigServiceMismatch",
                        "ConfigNotExist"
                      ]
                    },
                    "detail": {
                      "type": "string",
                      "description": "Human readable description of the error"
                    },
                    "source": {
                      "type": "string",
                      "description": "Path to the data source of the error",
                      "format": "json-pointer"
                    },
                    "path": {
                      "type": "string",
                      "description": "The Schema path where the error ocurred",
                      "format": "json-pointer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "pangea-service-config-id": {
        "type": "string",
        "description": "ID of a service config",
        "pattern": "^pci_[a-z2-7]{32}$",
        "examples": ["pci_wuk7tvtpswyjtlsx52b7yyi2l7zotv4a"]
      },
      "vault-req-id": {
        "type": "string",
        "format": "pangea-id",
        "pattern": "^pvi_[a-z2-7]{32}$",
        "description": "ID of a Vault key, secret, token, or folder"
      },
      "vault-req-key-id": {
        "type": "string",
        "format": "pangea-id",
        "pattern": "^pvi_[a-z2-7]{32}$",
        "description": "ID of a key"
      },
      "vault-req-folder-id": {
        "type": "string",
        "format": "pangea-id",
        "pattern": "^pvi_[a-z2-7]{32}$",
        "description": "ID of a folder"
      },
      "vault-req-key-secret-token-id": {
        "type": "string",
        "format": "pangea-id",
        "pattern": "^pvi_[a-z2-7]{32}$",
        "description": "ID of a key, secret, or token"
      },
      "vault-req-secret-id": {
        "type": "string",
        "format": "pangea-id",
        "pattern": "^pvi_[a-z2-7]{32}$",
        "description": "ID of a secret"
      },
      "vault-req-token-id": {
        "type": "string",
        "format": "pangea-id",
        "pattern": "^pvi_[a-z2-7]{32}$",
        "description": "ID of a token saved as a Vault item"
      },
      "vault-req-key-version": {
        "type": "integer",
        "description": "Version of the key. If not specified, the latest version is used by default.",
        "minimum": 1,
        "examples": [1]
      },
      "vault-req-key-secret-token-version": {
        "type": "integer",
        "description": "Version of the key, secret, or token. If not specified, the latest version is used by default.",
        "minimum": 1,
        "examples": [1]
      },
      "vault-req-multiple-versions": {
        "type": ["string", "integer"],
        "description": "Version(s) to retrieve. Supported parameter values are:\n- `all` - Retrieve all versions of the item.\n- `<num>` - Retrieve a specific version number of the item.\n- `-<num>` - Retrieve last `<num> + 1` versions of the item.\n- `<no-value>` - Return the current version.",
        "examples": [1]
      },
      "vault-req-multiple-versions-v2": {
        "type": ["string", "integer"],
        "description": "Version(s) to retrieve. Supported parameter values are:\n- `all` - Retrieve all versions of the item.\n- `<num>` - Retrieve a specific version number of the item.\n- `-<num>` - Retrieve the version `<num>` steps back starting from the current one (e.g., `-2` from version 5 returns version 4).\n- `-<num>:` - Retrieve last `<num>` versions of the item.\n- `<no-value>` - Return the current version.",
        "examples": [1]
      },
      "vault-req-verbose": {
        "type": "boolean",
        "description": "Return metadata and extra fields",
        "default": false,
        "examples": [true]
      },
      "vault-req-secret": {
        "type": "string",
        "description": "Secret value",
        "minLength": 1,
        "maxLength": 10240,
        "examples": ["12sdfgs4543qv@#%$casd"]
      },
      "vault-req-expiration-or-never": {
        "type": "string",
        "format": "date-time-or-never",
        "description": "Expiration timestamp (in iso8601), `never` to disable expiration",
        "examples": ["2030-01-01T10:00:00.000Z"]
      },
      "vault-req-rotation-frequency": {
        "type": "string",
        "format": "pangea-duration",
        "description": "Time interval between item rotations, provided as a positive number followed by a time unit: `secs`, `mins`, `hrs`, `days`, `weeks`, `months`, or `years`. You can use abbreviations like `1d`. Omit to inherit from the parent folder or default settings. Set to `never` to disable rotation.",
        "examples": ["10d", "2M", "44h"]
      },
      "vault-req-update-rotation-frequency": {
        "type": "string",
        "format": "pangea-duration",
        "description": "Time interval between item rotations, provided as a positive number followed by a time unit: `secs`, `mins`, `hrs`, `days`, `weeks`, `months`, or `years`. You can use abbreviations like `1d`. Set to `inherited` to inherit from the parent folder or default settings. Set to `never` to disable rotation.",
        "examples": ["10d", "2M", "44h"]
      },
      "vault-req-update-rotation-frequency-folder": {
        "type": "string",
        "format": "pangea-duration",
        "description": "Time interval between item rotations, provided as a positive number followed by a time unit: `secs`, `mins`, `hrs`, `days`, `weeks`, `months`, or `years`. You can use abbreviations like `1d`. Set to `inherited` to inherit from the parent folder or default settings.",
        "examples": ["10d", "2M", "44h"]
      },
      "vault-req-rotation-state": {
        "type": "string",
        "description": "Target state for the previous version after rotation. Set to `inherited` to inherit from the parent folder or default settings.",
        "enum": ["deactivated", "destroyed", "inherited"],
        "examples": ["deactivated"]
      },
      "vault-req-rotation-state-token": {
        "type": "string",
        "description": "Target state for the previous version after rotation. Set to `inherited` to inherit from the parent folder or default settings.",
        "enum": ["deactivated", "destroyed", "inherited"],
        "examples": ["deactivated"],
        "default": "destroyed"
      },
      "vault-req-manual-rotation-state": {
        "type": "string",
        "description": "Target state for the previous version after rotation. Omit to apply the current rotation policy.",
        "enum": ["deactivated", "suspended", "destroyed"],
        "examples": ["deactivated"]
      },
      "vault-req-folder-rotation-state": {
        "type": "string",
        "description": "Target state for the previous version of the folder items after rotation. Set to `inherited` to inherit from the parent folder or default settings.",
        "enum": ["deactivated", "destroyed", "inherited"],
        "examples": ["deactivated"]
      },
      "vault-req-rotation-grace-period": {
        "type": "string",
        "format": "pangea-duration",
        "description": "Grace period for the previous version, provided as a positive number followed by a time unit: `secs`, `mins`, `hrs`, `days`, `weeks`, `months`, or `years`. You can use abbreviations like `1d`. Omit to inherit from the parent folder or default settings.",
        "examples": ["1d", "2h"]
      },
      "vault-req-manual-rotation-grace-period": {
        "type": "string",
        "format": "pangea-duration",
        "description": "Grace period for the previous version, provided as a positive number followed by a time unit: `secs`, `mins`, `hrs`, `days`, `weeks`, `months`, or `years`. You can use abbreviations like `1d`. Omit to apply the current rotation policy.",
        "examples": ["1d", "2h"]
      },
      "vault-req-update-rotation-grace-period": {
        "type": "string",
        "format": "pangea-duration",
        "description": "Grace period for the previous version, provided as a positive number followed by a time unit: `secs`, `mins`, `hrs`, `days`, `weeks`, `months`, or `years`. You can use abbreviations like `1d`. Set to `inherited` to inherit from the parent folder or default settings.",
        "examples": ["1d", "2h"]
      },
      "vault-req-item-state": {
        "type": "string",
        "description": "New state of the item",
        "enum": ["enabled", "disabled"],
        "examples": ["disabled"]
      },
      "vault-req-item-version-state": {
        "type": "string",
        "description": "Filter based on version state.",
        "enum": [
          "active",
          "deactivated",
          "suspended",
          "compromised",
          "destroyed"
        ],
        "examples": ["active"]
      },
      "vault-req-state": {
        "type": "string",
        "description": "New state of the item version",
        "enum": [
          "active",
          "deactivated",
          "suspended",
          "compromised",
          "destroyed"
        ],
        "examples": ["active"]
      },
      "vault-req-destroy-period": {
        "type": "string",
        "format": "pangea-duration",
        "description": "Period of time for the destruction of a compromised key, provided as a positive number followed by a time unit: `secs`, `mins`, `hrs`, `days`, `weeks`, `months`, or `years`. You can use an abbreviation like `1d`. Applicable only if `state` is set to `compromised`.",
        "examples": ["1d", "1M"]
      },
      "vault-req-encrypting-item-id": {
        "type": "string",
        "description": "Item ID for the key that will be used to encrypt this one. Used for DEKs (data encryption keys)"
      },
      "vault-encrypting-item-id": {
        "type": "string",
        "description": "Item ID for the key that will be used to encrypt this one. Used for DEKs (data encryption keys)"
      },
      "vault-asymmetric-key-purpose": {
        "type": "string",
        "description": "Purpose of the key:\n- `signing` - Asymmetric key used for creating and verifying cryptographic signatures\n- `encryption` - Asymmetric key used for encryption and decryption operations\n- `jwt` - Asymmetric key used for signing JSON Web Tokens (JWT), producing a verifiable JSON Web Signature (JWS)\n- `pki` - Asymmetric key used for Public Key Infrastructure (PKI) functions, such as certificate lifecycle management and identity verification",
        "enum": ["signing", "encryption", "jwt", "pki"],
        "examples": ["signing"]
      },
      "vault-symmetric-key-purpose": {
        "type": "string",
        "description": "Purpose of the key:\n- `encryption` - Symmetric key used for encryption and decryption operations\n- `jwt` - Symmetric key used for signing JSON Web Tokens (JWT), producing a verifiable JSON Web Signature (JWS)\n- `fpe` - Symmetric key used for Format Preserving Encryption (FPE)",
        "enum": ["encryption", "jwt", "fpe"],
        "default": "encryption",
        "examples": ["fpe"]
      },
      "vault-client-id": {
        "type": "string",
        "description": "OAuth client ID"
      },
      "vault-client-secret-id": {
        "type": "string",
        "description": "OAuth client secret ID"
      },
      "vault-client-secret": {
        "type": "string",
        "description": "OAuth client secret"
      },
      "vault-key-exportable": {
        "type": "boolean",
        "description": "`true` if the key is exportable",
        "default": false,
        "examples": [false]
      },
      "vault-key-item-exportable": {
        "type": "boolean",
        "description": "`true` if the key is exportable, applicable only if the item is a key",
        "default": false,
        "examples": [false]
      },
      "vault-key-req-exportable": {
        "type": "boolean",
        "description": "Allows the creation of an exportable key. Default is `false`.",
        "default": false,
        "examples": [false]
      },
      "vault-public-key": {
        "type": "string",
        "description": "Public key (in PEM format)",
        "examples": [
          "-----BEGIN RSA PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA14PShPEFcaWoh5o4wo0v\nGOAKBhF0XJTGYS5P31OzL6GnhtaRXCqsN7vwqN5omQM8wSCBm2Fh7Q66aIsq7VUE\nHMi/CpxNRvxFqeCuVmbv1tFl5BSyzH1DcQFiqPi3lE4lUzfTDWFOePUB9sPPl2rk\nPyfxHWu4T+3VJicxoWIgZwZ323dQDvFblj3Sa1twxki9AE8lahd4plXNTVu1VbwA\nfNuTZEV76JZob+iA9PI+Wht/lOMJR/lE3HzOtvuNAteK7rJE7Mp5iHo+5CxUeapR\n1RBF4YZFV02DkIZEfHBIVzISb9Asj7/MVC+dDIb5HMf/PAb6LPSWFnNpaL48Vtrb\niQIDAQAB\n-----END RSA PUBLIC KEY-----\n"
        ]
      },
      "vault-private-key": {
        "type": "string",
        "description": "Private key (in PEM format)"
      },
      "vault-key": {
        "type": "string",
        "format": "base64",
        "description": "Key material (Base64-encoded)",
        "examples": ["oA7Bw+evLWGnaxpMuU/w7Q=="]
      },
      "vault-secret": {
        "type": "string",
        "description": "Secret value",
        "examples": ["12sdfgs4543qv@#%$casd"]
      },
      "vault-token": {
        "type": "string",
        "pattern": "^p[a-z]{2}_[a-z0-9]{32}$",
        "description": "Pangea token value"
      },
      "vault-expiration": {
        "type": "string",
        "format": "date-time",
        "description": "Expiration timestamp",
        "examples": ["2030-01-01T10:00:00.000Z"]
      },
      "vault-disabled-at": {
        "type": "string",
        "format": "date-time",
        "description": "Timestamp indicating when the item will be disabled",
        "examples": ["2030-01-01T10:00:00.000Z"]
      },
      "vault-id": {
        "type": "string",
        "description": "ID of the item",
        "examples": ["pvi_p6g5i3gtbvqvc3u6zugab6qs6r63tqf5"]
      },
      "vault-secret-id": {
        "type": "string",
        "description": "ID of the secret",
        "examples": ["pvi_p6g5i3gtbvqvc3u6zugab6qs6r63tqf5"]
      },
      "vault-key-id": {
        "type": "string",
        "description": "ID of the key",
        "examples": ["pvi_p6g5i3gtbvqvc3u6zugab6qs6r63tqf5"]
      },
      "vault-req-encryption-key-id": {
        "type": "string",
        "description": "ID of the key to use. It must be a `symmetric_key` or `asymmetric_key` created for encryption purposes.",
        "examples": ["pvi_p6g5i3gtbvqvc3u6zugab6qs6r63tqf5"]
      },
      "vault-req-signing-key-id": {
        "type": "string",
        "description": "ID of the key to use. It must be an `asymmetric_key` created for signing purposes.",
        "examples": ["pvi_p6g5i3gtbvqvc3u6zugab6qs6r63tqf5"]
      },
      "vault-signing-key-id": {
        "type": "string",
        "description": "ID of the key used for signing",
        "examples": ["pvi_p6g5i3gtbvqvc3u6zugab6qs6r63tqf5"]
      },
      "vault-req-signing-verification-key-id": {
        "type": "string",
        "description": "ID of the key used for signing `message`",
        "examples": ["pvi_p6g5i3gtbvqvc3u6zugab6qs6r63tqf5"]
      },
      "vault-req-fpe-encryption-key-id": {
        "type": "string",
        "description": "ID of the key to use. It must be a `symmetric_key` created for Format Preserving Encryption.",
        "examples": ["pvi_p6g5i3gtbvqvc3u6zugab6qs6r63tqf5"]
      },
      "vault-req-decryption-key-id": {
        "type": "string",
        "description": "ID of the key used for encrypting `cipher_text`",
        "examples": ["pvi_p6g5i3gtbvqvc3u6zugab6qs6r63tqf5"]
      },
      "vault-req-structured-decryption-key-id": {
        "type": "string",
        "description": "ID of the key used for encrypting `structured_data`",
        "examples": ["pvi_p6g5i3gtbvqvc3u6zugab6qs6r63tqf5"]
      },
      "vault-token-id": {
        "type": "string",
        "description": "ID of the token",
        "examples": ["pvi_p6g5i3gtbvqvc3u6zugab6qs6r63tqf5"]
      },
      "vault-folder-id": {
        "type": "string",
        "description": "ID of the folder",
        "examples": ["pvi_p6g5i3gtbvqvc3u6zugab6qs6r63tqf5"]
      },
      "vault-type": {
        "type": "string",
        "description": "Type of the Vault item",
        "enum": [
          "symmetric_key",
          "asymmetric_key",
          "secret",
          "pangea_token",
          "folder",
          "pangea_client_secret",
          "pangea_platform_client_secret"
        ],
        "examples": ["asymmetric_key", "symmetric_key", "secret"]
      },
      "vault-type-secret": {
        "type": "string",
        "description": "Type of the Vault item",
        "enum": ["secret", "pangea_token"],
        "examples": ["secret"]
      },
      "vault-type-key": {
        "type": "string",
        "description": "Type of the Vault item",
        "enum": ["asymmetric_key", "symmetric_key"],
        "examples": ["asymmetric_key", "symmetric_key"]
      },
      "vault-item-state": {
        "type": "string",
        "description": "State of the item",
        "enum": ["enabled", "disabled"]
      },
      "vault-enabled": {
        "type": "boolean",
        "description": "`true` if the item is enabled"
      },
      "vault-req-update-enabled": {
        "type": "boolean",
        "description": "Set to `true` to enable the item or `false` to disable it"
      },
      "vault-item-version-state": {
        "type": "string",
        "description": "State of the item version",
        "enum": [
          "active",
          "deactivated",
          "suspended",
          "compromised",
          "destroyed"
        ]
      },
      "vault-item-version-destroy-at": {
        "type": "string",
        "format": "date-time",
        "description": "Timestamp indicating when this version will be destroyed",
        "examples": ["2022-02-02T10:00:00.000Z"]
      },
      "vault-name": {
        "type": "string",
        "description": "Name of the item",
        "examples": ["my-very-secret-secret"]
      },
      "vault-req-key-name": {
        "type": "string",
        "description": "Name to be assigned to the key",
        "examples": ["my-very-secret-secret"]
      },
      "vault-req-secret-name": {
        "type": "string",
        "description": "Name to be assigned to the secret",
        "examples": ["my-very-secret-secret"]
      },
      "vault-req-token-name": {
        "type": "string",
        "description": "Name to be assigned to the token",
        "examples": ["my-very-secret-secret"]
      },
      "vault-req-folder-name": {
        "type": "string",
        "description": "Name of the folder being created",
        "examples": ["my-very-secret-secret"]
      },
      "vault-folder-name": {
        "type": "string",
        "description": "Name of a folder",
        "pattern": "^[0-9a-zA-Z_\\.\\-/ ]*$",
        "examples": ["secrets"]
      },
      "vault-folder": {
        "type": "string",
        "description": "Folder where the item is stored",
        "pattern": "^[0-9a-zA-Z_\\.\\-/ ]*$",
        "examples": ["/personal"]
      },
      "vault-req-key-folder": {
        "type": "string",
        "description": "Folder where this key will be stored in Vault. By default, a folder is created or used based on the key\u2019s purpose: `/key/encryption`, `/key/signing`, or `/key/jwt`.",
        "pattern": "^[0-9a-zA-Z_\\.\\-/ ]*$",
        "examples": ["/personal"]
      },
      "vault-delete-recursive": {
        "type": "boolean",
        "description": "Applicable only to folders. Set to `true` to recursively delete all items inside the folder.",
        "examples": [true]
      },
      "vault-folder-folder": {
        "type": "string",
        "description": "Parent folder where this folder is stored",
        "pattern": "^[0-9a-zA-Z_\\.\\-/ ]*$",
        "examples": ["/personal"]
      },
      "vault-metadata": {
        "type": "object",
        "patternProperties": {
          ".*": {
            "type": "string"
          }
        },
        "description": "Metadata provided by the user or system",
        "examples": [
          {
            "created_by": "John Doe",
            "used_in": "Google products"
          }
        ]
      },
      "vault-user-metadata": {
        "type": "object",
        "patternProperties": {
          ".*": {
            "type": "string"
          }
        },
        "description": "Metadata provided by the user",
        "examples": [
          {
            "created_by": "John Doe",
            "used_in": "Google products"
          }
        ]
      },
      "vault-pangea-metadata": {
        "type": "object",
        "patternProperties": {
          ".*": {
            "type": "string"
          }
        },
        "description": "Metadata provided by the system",
        "examples": [
          {
            "client_id": "pce_qhfxarlt7o5qhsox54ocaww6vscj5htc",
            "client_secret_name": "management-client-secret"
          }
        ]
      },
      "vault-tags": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of user-defined tags",
        "examples": [["irs_2023", "personal"]]
      },
      "vault-version": {
        "type": "integer",
        "description": "Item version",
        "examples": [1]
      },
      "vault-key-version": {
        "type": "integer",
        "description": "Version of the key",
        "examples": [1]
      },
      "vault-encryption-key-version": {
        "type": "integer",
        "description": "Version of the key used for encryption",
        "minimum": 1,
        "examples": [1]
      },
      "vault-decryption-key-version": {
        "type": "integer",
        "description": "Version of the key used for decryption",
        "minimum": 1,
        "examples": [1]
      },
      "vault-signing-key-version": {
        "type": "integer",
        "description": "Version of the key used for signing",
        "minimum": 1,
        "examples": [1]
      },
      "vault-num-versions": {
        "type": "integer",
        "description": "Total number of versions of the item",
        "examples": [1]
      },
      "vault-last-rotated": {
        "type": "string",
        "format": "date-time",
        "description": "Timestamp of the last rotation",
        "examples": ["2022-12-10T20:00:00.000Z"]
      },
      "vault-next-rotation": {
        "type": "string",
        "format": "date-time",
        "description": "Timestamp of the next rotation if auto-rotation is enabled",
        "examples": ["2023-01-10T20:00:00.000Z"]
      },
      "vault-created-at": {
        "type": "string",
        "format": "date-time",
        "description": "Timestamp indicating when the item was created",
        "examples": ["2022-12-10T20:00:00.000Z"]
      },
      "vault-version-created-at": {
        "type": "string",
        "format": "date-time",
        "description": "Timestamp indicating when this version was created",
        "examples": ["2022-12-10T20:00:00.000Z"]
      },
      "vault-rotation-frequency": {
        "type": "string",
        "description": "Time interval between item rotations",
        "examples": ["10day", "2M", "44h"]
      },
      "vault-rotation-state": {
        "type": "string",
        "description": "Target state for the previous version after rotation",
        "enum": ["deactivated", "destroyed"],
        "examples": ["deactivated"]
      },
      "vault-rotation-grace-period": {
        "type": "string",
        "description": "Grace period for the previous version"
      },
      "vault-symmetric-key-algorithm": {
        "type": "string",
        "description": "Algorithm of the key",
        "enum": [
          "AES-CFB-128",
          "AES-CFB-256",
          "AES-GCM-256",
          "AES-CBC-128",
          "AES-CBC-256",
          "AES-FF3-1-128-BETA",
          "AES-FF3-1-256-BETA",
          "HS256",
          "HS384",
          "HS512"
        ],
        "examples": ["AES-CFB-128"]
      },
      "vault-encryption-key-algorithm": {
        "type": "string",
        "description": "Algorithm of the key used for encryption",
        "examples": ["RSA-OAEP-4096-SHA512"]
      },
      "vault-decryption-key-algorithm": {
        "type": "string",
        "description": "Algorithm of the key used for decryption",
        "examples": ["RSA-OAEP-4096-SHA512"]
      },
      "vault-signing-key-algorithm": {
        "type": "string",
        "description": "Algorithm of the key used for signing",
        "examples": ["ED25519"]
      },
      "vault-symmetric-key-encryption-algorithm": {
        "title": "encryption",
        "type": "string",
        "description": "Algorithm of the key for purpose=`encryption`",
        "enum": [
          "AES-CFB-128",
          "AES-CFB-256",
          "AES-GCM-256",
          "AES-CBC-128",
          "AES-CBC-256"
        ],
        "examples": ["AES-CFB-128"]
      },
      "vault-symmetric-key-jwt-algorithm": {
        "title": "jwt",
        "type": "string",
        "description": "Algorithm of the key for purpose=`jwt`",
        "enum": ["HS256", "HS384", "HS512"],
        "examples": ["HS256"]
      },
      "vault-symmetric-key-fpe-algorithm": {
        "title": "fpe",
        "type": "string",
        "description": "Algorithm of the key for purpose=`fpe` (Format Preserving Encryption)",
        "enum": ["AES-FF3-1-128-BETA", "AES-FF3-1-256-BETA"],
        "examples": ["AES-FF3-1-128-BETA"]
      },
      "vault-asymmetric-key-algorithm": {
        "type": "string",
        "description": "Algorithm of the key",
        "enum": [
          "ED25519",
          "ES256",
          "ES384",
          "ES512",
          "ES256K",
          "RSA-OAEP-2048-SHA1",
          "RSA-OAEP-2048-SHA256",
          "RSA-OAEP-2048-SHA512",
          "RSA-OAEP-3072-SHA1",
          "RSA-OAEP-3072-SHA256",
          "RSA-OAEP-3072-SHA512",
          "RSA-OAEP-4096-SHA1",
          "RSA-OAEP-4096-SHA256",
          "RSA-OAEP-4096-SHA512",
          "RSA-PKCS1V15-2048-SHA256",
          "RSA-PSS-2048-SHA256",
          "RSA-PSS-3072-SHA256",
          "RSA-PSS-4096-SHA256",
          "RSA-PSS-4096-SHA512",
          "RSA-2048-SHA256",
          "RSA-3072-SHA256",
          "RSA-4096-SHA256",
          "ECDSA-SHA256",
          "ECDSA-SHA384",
          "ECDSA-SHA512",
          "ED25519-DILITHIUM2-BETA",
          "ED448-DILITHIUM3-BETA",
          "SPHINCSPLUS-128F-SHAKE256-SIMPLE-BETA",
          "SPHINCSPLUS-128F-SHAKE256-ROBUST-BETA",
          "SPHINCSPLUS-128F-SHA256-SIMPLE-BETA",
          "SPHINCSPLUS-128F-SHA256-ROBUST-BETA",
          "SPHINCSPLUS-192F-SHAKE256-SIMPLE-BETA",
          "SPHINCSPLUS-192F-SHAKE256-ROBUST-BETA",
          "SPHINCSPLUS-192F-SHA256-SIMPLE-BETA",
          "SPHINCSPLUS-192F-SHA256-ROBUST-BETA",
          "SPHINCSPLUS-256F-SHAKE256-SIMPLE-BETA",
          "SPHINCSPLUS-256F-SHAKE256-ROBUST-BETA",
          "SPHINCSPLUS-256F-SHA256-SIMPLE-BETA",
          "SPHINCSPLUS-256F-SHA256-ROBUST-BETA",
          "FALCON-1024-BETA"
        ],
        "examples": ["ED25519"]
      },
      "vault-asymmetric-key-signing-algorithm": {
        "title": "signing",
        "type": "string",
        "description": "Algorithm of the key for purpose=`signing`",
        "enum": [
          "ED25519",
          "RSA-PKCS1V15-2048-SHA256",
          "ES256",
          "ES384",
          "ES512",
          "ES256K",
          "RSA-PSS-2048-SHA256",
          "RSA-PSS-3072-SHA256",
          "RSA-PSS-4096-SHA256",
          "RSA-PSS-4096-SHA512",
          "ED25519-DILITHIUM2-BETA",
          "ED448-DILITHIUM3-BETA",
          "SPHINCSPLUS-128F-SHAKE256-SIMPLE-BETA",
          "SPHINCSPLUS-128F-SHAKE256-ROBUST-BETA",
          "SPHINCSPLUS-128F-SHA256-SIMPLE-BETA",
          "SPHINCSPLUS-128F-SHA256-ROBUST-BETA",
          "SPHINCSPLUS-192F-SHAKE256-SIMPLE-BETA",
          "SPHINCSPLUS-192F-SHAKE256-ROBUST-BETA",
          "SPHINCSPLUS-192F-SHA256-SIMPLE-BETA",
          "SPHINCSPLUS-192F-SHA256-ROBUST-BETA",
          "SPHINCSPLUS-256F-SHAKE256-SIMPLE-BETA",
          "SPHINCSPLUS-256F-SHAKE256-ROBUST-BETA",
          "SPHINCSPLUS-256F-SHA256-SIMPLE-BETA",
          "SPHINCSPLUS-256F-SHA256-ROBUST-BETA",
          "FALCON-1024-BETA"
        ],
        "examples": ["ED25519"]
      },
      "vault-asymmetric-key-encryption-algorithm": {
        "title": "encryption",
        "type": "string",
        "description": "Algorithm of the key for purpose=`encryption`",
        "enum": [
          "RSA-OAEP-2048-SHA1",
          "RSA-OAEP-2048-SHA256",
          "RSA-OAEP-2048-SHA512",
          "RSA-OAEP-3072-SHA1",
          "RSA-OAEP-3072-SHA256",
          "RSA-OAEP-3072-SHA512",
          "RSA-OAEP-4096-SHA1",
          "RSA-OAEP-4096-SHA256",
          "RSA-OAEP-4096-SHA512"
        ],
        "examples": ["RSA-OAEP-2048-SHA256"]
      },
      "vault-asymmetric-key-jwt-algorithm": {
        "title": "jwt",
        "type": "string",
        "description": "Algorithm of the key for purpose=`jwt`",
        "enum": ["ES256", "ES384", "ES512"],
        "examples": ["ES256"]
      },
      "vault-asymmetric-key-pki-algorithm": {
        "title": "pki",
        "type": "string",
        "description": "Algorithm of the key for purpose=`pki`",
        "enum": [
          "ED25519",
          "RSA-2048-SHA256",
          "RSA-3072-SHA256",
          "RSA-4096-SHA256",
          "RSA-PSS-2048-SHA256",
          "RSA-PSS-3072-SHA256",
          "RSA-PSS-4096-SHA256",
          "RSA-PSS-4096-SHA512",
          "ECDSA-SHA256",
          "ECDSA-SHA384",
          "ECDSA-SHA512"
        ],
        "examples": ["ED25519"]
      },
      "vault-req-cipher-text": {
        "type": "string",
        "format": "base64",
        "description": "Message encrypted by Vault (Base64-encoded)"
      },
      "vault-req-fpe-cipher-text": {
        "type": "string",
        "description": "Message encrypted by Vault"
      },
      "vault-req-message": {
        "type": "string",
        "format": "base64",
        "description": "Message used for generating `signature` (Base64-encoded)",
        "examples": ["lJkk0gCLux+Q+rPNqLPEYw=="]
      },
      "vault-req-signature": {
        "type": "string",
        "format": "base64",
        "description": "Signature to be verified, generated for `message` (Base64-encoded)",
        "examples": [
          "FfWuT2Mq/+cxa7wIugfhzi7ktZxVf926idJNgBDCysF/knY9B7M6wxqHMMPDEBs86D8OsEGuED21y3J7IGOpCQ=="
        ]
      },
      "vault-cipher-text": {
        "type": "string",
        "format": "base64",
        "description": "Encrypted message (Base64-encoded)",
        "examples": ["lJkk0gCLux+Q+rPNqLPEYw=="]
      },
      "vault-fpe-cipher-text": {
        "type": "string",
        "description": "Message encrypted with FPE",
        "examples": ["634-7451-0582"]
      },
      "vault-req-plain-text": {
        "type": "string",
        "format": "base64",
        "description": "Message to be encrypted (Base64-encoded)",
        "examples": ["lJkk0gCLux+Q+rPNqLPEYw=="]
      },
      "vault-req-fpe-plain-text": {
        "type": "string",
        "description": "Message to be encrypted",
        "examples": ["(555) 555-5555"]
      },
      "vault-plain-text": {
        "type": "string",
        "format": "base64",
        "description": "Decrypted message (Base64-encoded)",
        "examples": ["lJkk0gCLux+Q+rPNqLPEYw=="]
      },
      "vault-jwt-payload": {
        "type": "string",
        "description": "JWT payload (in JSON)",
        "examples": [
          "{\"sub\": \"1234567890\",\"name\": \"John Doe\",\"admin\": true}"
        ]
      },
      "vault-jws": {
        "type": "string",
        "description": "Signed JSON Web Token (JWS)",
        "examples": [
          "ewogICJhbGciOiAiUlMyNTYiLAogICJraWQiOiAiMTMzNzQ3MTQxMjU1IiwKICAiaWF0IjogMCwKICAiaXNzIjogIkM9R0IsIEw9TG9uZG9uLCBPVT1OdWFwYXkgQVBJLCBPPU51YXBheSwgQ049eWJvcXlheTkycSIsCiAgImI2NCI6IGZhbHNlLAogICJjcml0IjogWwogICAgImlhdCIsCiAgICAiaXNzIiwKICAgICJiNjQiCiAgXQp9..d_cZ46lwNiaFHAu_saC-Zz4rSzNbevWirO94EmBlbOwkB1L78vGbAnNjUsmFSU7t_HhL-cyMiQUDyRWswsEnlDljJsRi8s8ft48ipy2SMuZrjPpyYYMgink8nZZK7l-eFJcTiS9ZWezAAXF_IJFXSTO5ax9z6xty3zTNPNMV9W7aH8fEAvbUIiueOhH5xNHcsuqlOGygKdFz2rbjTGffoE_6zS4Dry-uX5mts2duLorobUimGsdlUcSM6P6vZEtcXaJCdjrT9tuFMh4CkX9nqk19Bq2z3i-SX4JCPvhD2r3ghRmX0gG08UcvyFVbrnVZJnpl4MU8V4Nr3-2M5URZOg"
        ]
      },
      "vault-sign-message": {
        "type": "string",
        "format": "base64",
        "description": "Message to be signed (Base64-encoded)",
        "examples": ["lJkk0gCLux+Q+rPNqLPEYw=="]
      },
      "vault-signature": {
        "type": "string",
        "format": "base64",
        "description": "Signature of the message (Base64-encoded)",
        "examples": [
          "FfWuT2Mq/+cxa7wIugfhzi7ktZxVf926idJNgBDCysF/knY9B7M6wxqHMMPDEBs86D8OsEGuED21y3J7IGOpCQ=="
        ]
      },
      "vault-valid-signature": {
        "type": "boolean",
        "description": "Indicates whether the signature has been verified:\n- `true` - The signature is valid\n- `false` - The signature is not valid"
      },
      "additional-data": {
        "type": "string",
        "description": "Extra data optionally accepted by some algorithms during encryption and required during decryption to ensure message integrity (Base64-encoded)",
        "examples": ["lJkk0gCLux+Q+rPNqLPEYw=="]
      },
      "vault-list-filter": {
        "type": "object",
        "description": "Filters to customize your search, for example:\n```\n{\n  \"folder\": \"/encryption\",\n  \"tags\": \"personal\",\n  \"name__contains\": \"my\",\n  \"created_at__gt\": \"2020-03-11\"\n}\n```",
        "examples": [
          {
            "folder": "/",
            "type": "asymmetric_key",
            "created_at__lt": "2021-12-12T00:00:00.000Z"
          }
        ]
      },
      "vault-list-version": {
        "type": "object",
        "description": "Map from item to version. If provided, the response will include the specified version instead of the latest version of the item.",
        "items": {
          "type": "integer"
        },
        "examples": [
          {
            "pvi_n3dudikzwvf5xt23blfry73w6tb225o2": 2,
            "pvi_odkqmjelgmz2ontfgk6jjo7tgdmhsgtv": 1
          }
        ]
      },
      "vault-list-size": {
        "type": "integer",
        "description": "Maximum number of items in the response",
        "default": 50,
        "maximum": 100,
        "examples": [20]
      },
      "vault-list-order": {
        "type": "string",
        "description": "Direction for ordering the results",
        "enum": ["asc", "desc"],
        "examples": ["asc"]
      },
      "vault-list-order-by": {
        "type": "string",
        "enum": [
          "id",
          "type",
          "created_at",
          "algorithm",
          "purpose",
          "expiration",
          "last_rotated",
          "next_rotation",
          "name",
          "folder",
          "item_state"
        ],
        "description": "Property by which to order the results",
        "examples": ["name"]
      },
      "vault-export-encrypted": {
        "type": "boolean",
        "description": "`true` if the exported key(s) are encrypted with `encryption_key` provided in the request. If so, the result is encoded in Base64; otherwise, the keys are in plain text PEM format.",
        "examples": [true]
      },
      "vault-export-encryption-key": {
        "type": "string",
        "description": "Public key (in PEM format) used to encrypt the exported key material",
        "examples": [
          "-----BEGIN RSA PUBLIC KEY-----\nMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAvDn+IWS8/oXYLxBDsUIU\nKk/Vf1/2C80uj7SA3cR+f/UVaXdOPUCm4TSPdh089lvbpvY9ynyAjmXT7YWxnVf/\nz1E0smdiP4vzn7WAfvbLuw1GXmXVWerElnfQTAzTj9wWc145dVM5HgQ/fwrt1SQ1\nlSLNQYXaQcB1sk1pkpJprUHxg4vvOaDpWWDG3lFS7odDJ8lvg5fdA6BfqcbZedeo\nQ7qIG/TiZpszqkebwE7EKNZcX9+vomciqTw6vWLmQuf+5M7kFosLhu9ysOL2uyZN\nFAAh5js5yOsn/jP2pWSfeict8N2k2l9RpOGUQ1F6PNfyfgCtxOzQvaGiSWChMxGG\n0YTSVIEwwawvyb1WBue5jXsTp3NR3X8+MT1l5A20M6Veqi/ETO3V99xrWr1ico40\njK2b66OfD09nGjh635bCAV1LUSafiwvvh1GE7+JcMvySU4lRg0619BTW8oOwK+C4\nt6yryU9Q9o8dGj+Wd8GWSduDQHv+DtP6Goo+SDrZ/oYN/vdHamCTaob+WBzr/+H3\nMVTbEPrXVBxzSM5E2O7mdIA+z7rLdwL2A+gA4kCUX3ZVv4wm4CcuDZ53MfRgPe/K\nVsSJM/YazpywOQoAAu2pkxDyvSc140LS5WnLWQPoIocMQSWb5wuCCkjnNhBO6WhL\n6+r5nSA9lSHQZkJjzP/lHE8CAwEAAQ==\n-----END RSA PUBLIC KEY-----\n"
        ]
      },
      "vault-export-encryption-key-v2": {
        "type": "string",
        "description": "Public key for use with the RSA-OAEP-4096-SHA512 algorithm in PEM format. When `RSA-OAEP-4096-SHA512` is selected as `asymmetric_algorithm`, the public key is used to encrypt exported key material up to 382 bytes in length. When `RSA-NO-PADDING-4096-KEM` is selected, the public key encrypts a salt used with the `kem_password` parameter to derive a symmetric key, which is then used to encrypt the exported key material. The encrypted salt is returned in `result.encrypted_salt`.",
        "examples": [
          "-----BEGIN RSA PUBLIC KEY-----\nMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAvDn+IWS8/oXYLxBDsUIU\nKk/Vf1/2C80uj7SA3cR+f/UVaXdOPUCm4TSPdh089lvbpvY9ynyAjmXT7YWxnVf/\nz1E0smdiP4vzn7WAfvbLuw1GXmXVWerElnfQTAzTj9wWc145dVM5HgQ/fwrt1SQ1\nlSLNQYXaQcB1sk1pkpJprUHxg4vvOaDpWWDG3lFS7odDJ8lvg5fdA6BfqcbZedeo\nQ7qIG/TiZpszqkebwE7EKNZcX9+vomciqTw6vWLmQuf+5M7kFosLhu9ysOL2uyZN\nFAAh5js5yOsn/jP2pWSfeict8N2k2l9RpOGUQ1F6PNfyfgCtxOzQvaGiSWChMxGG\n0YTSVIEwwawvyb1WBue5jXsTp3NR3X8+MT1l5A20M6Veqi/ETO3V99xrWr1ico40\njK2b66OfD09nGjh635bCAV1LUSafiwvvh1GE7+JcMvySU4lRg0619BTW8oOwK+C4\nt6yryU9Q9o8dGj+Wd8GWSduDQHv+DtP6Goo+SDrZ/oYN/vdHamCTaob+WBzr/+H3\nMVTbEPrXVBxzSM5E2O7mdIA+z7rLdwL2A+gA4kCUX3ZVv4wm4CcuDZ53MfRgPe/K\nVsSJM/YazpywOQoAAu2pkxDyvSc140LS5WnLWQPoIocMQSWb5wuCCkjnNhBO6WhL\n6+r5nSA9lSHQZkJjzP/lHE8CAwEAAQ==\n-----END RSA PUBLIC KEY-----\n"
        ]
      },
      "vault-export-encryption-algorithm": {
        "type": "string",
        "description": "Public key algorithm",
        "enum": ["RSA-OAEP-4096-SHA512"],
        "examples": ["RSA-OAEP-4096-SHA512"]
      },
      "vault-export-asymmetric-algorithm": {
        "type": "string",
        "description": "Encryption option for exporting key material. Use `RSA-OAEP-4096-SHA512` for traditional public key encryption of key material up to 382 bytes. Use `RSA-NO-PADDING-4096-KEM` for KEM encryption, which supports key material of any length. See [Encrypting and exporting a key using KEM](/docs/vault/manage-keys/export#encrypting-and-exporting-a-key-using-kem) for additional details.",
        "enum": ["RSA-OAEP-4096-SHA512", "RSA-NO-PADDING-4096-KEM"],
        "examples": ["RSA-OAEP-4096-SHA512", "RSA-NO-PADDING-4096-KEM"]
      },
      "vault-export-symmetric-algorithm": {
        "type": "string",
        "description": "Algorithm of the symmetric key used to encrypt the exported key material when `encryption_type` is `kem`",
        "enum": ["AES-GCM-256"],
        "examples": ["AES-GCM-256"]
      },
      "vault-export-kdf": {
        "type": "string",
        "description": "Key Derivation Function (KDF) used to derive the symmetric key for encrypting the exported key material when `encryption_type` is `kem`",
        "enum": ["pbkdf2"],
        "examples": ["pbkdf2"]
      },
      "vault-export-hash-algorithm": {
        "type": "string",
        "description": "Hash algorithm used to derive the symmetric key for encrypting the exported key material when `encryption_type` is `kem`",
        "enum": ["sha512"],
        "examples": ["sha512"]
      },
      "vault-export-iteration-count": {
        "type": "integer",
        "description": "Iteration count used to derive the symmetric key for encrypting the exported key material when `encryption_type` is `kem`"
      },
      "vault-export-encrypted-salt": {
        "type": "string",
        "description": "Salt used to derive the symmetric key for encrypting the exported key material when `encryption_type` is `kem`, encrypted with the public key provided in the `asymmetric_public_key` parameter (Base64-encoded)"
      },
      "vault-export-response-encryption-type": {
        "type": "string",
        "description": "Encryption format of the exported key(s):\n- `none` - Plain text, unencrypted\n- `asymmetric` - Encrypted using only the public key provided in the `asymmetric_public_key` parameter\n- `kem` - Encrypted using KEM protocol\n",
        "enum": ["none", "asymmetric", "kem"],
        "examples": ["kem"]
      },
      "vault-export-kem-password": {
        "type": "string",
        "description": "Password used with a salt to derive the symmetric key for encrypting the exported key material in Key Encapsulation Mechanism (KEM). Required if `asymmetric_algorithm` is set to `RSA-NO-PADDING-4096-KEM`."
      },
      "vault-list-item-version": {
        "type": "object",
        "description": "Metadata for a specific Vault item version, allowing arbitrary extra data to be associated with the item. For example, use metadata to tag projects or store references like Jira ticket IDs.",
        "required": [],
        "properties": {
          "version": {
            "$ref": "#/components/schemas/vault-version"
          },
          "created_at": {
            "$ref": "#/components/schemas/vault-version-created-at"
          },
          "state": {
            "$ref": "#/components/schemas/vault-item-version-state"
          },
          "destroy_at": {
            "$ref": "#/components/schemas/vault-item-version-destroy-at"
          },
          "secret": {
            "description": "If 'include_secrets' was provided, and the list item type is 'secret', this value will be populated.",
            "$ref": "#/components/schemas/vault-secret"
          }
        }
      },
      "vault-item-version": {
        "type": "object",
        "description": "Metadata about an item version",
        "properties": {
          "version": {
            "$ref": "#/components/schemas/vault-version"
          },
          "created_at": {
            "$ref": "#/components/schemas/vault-version-created-at"
          },
          "state": {
            "$ref": "#/components/schemas/vault-item-version-state"
          },
          "destroy_at": {
            "$ref": "#/components/schemas/vault-item-version-destroy-at"
          }
        }
      },
      "vault-asymmetric-key-version": {
        "type": "object",
        "description": "Metadata about an item version",
        "properties": {
          "version": {
            "$ref": "#/components/schemas/vault-version"
          },
          "created_at": {
            "$ref": "#/components/schemas/vault-version-created-at"
          },
          "state": {
            "$ref": "#/components/schemas/vault-item-version-state"
          },
          "destroy_at": {
            "$ref": "#/components/schemas/vault-item-version-destroy-at"
          },
          "public_key": {
            "$ref": "#/components/schemas/vault-public-key"
          }
        }
      },
      "vault-symmetric-key-version": {
        "type": "object",
        "description": "Metadata about an item version",
        "properties": {
          "version": {
            "$ref": "#/components/schemas/vault-version"
          },
          "created_at": {
            "$ref": "#/components/schemas/vault-version-created-at"
          },
          "state": {
            "$ref": "#/components/schemas/vault-item-version-state"
          },
          "destroy_at": {
            "$ref": "#/components/schemas/vault-item-version-destroy-at"
          }
        }
      },
      "vault-secret-version": {
        "type": "object",
        "description": "Metadata about an item version",
        "properties": {
          "version": {
            "$ref": "#/components/schemas/vault-version"
          },
          "created_at": {
            "$ref": "#/components/schemas/vault-version-created-at"
          },
          "state": {
            "$ref": "#/components/schemas/vault-item-version-state"
          },
          "destroy_at": {
            "$ref": "#/components/schemas/vault-item-version-destroy-at"
          },
          "secret": {
            "$ref": "#/components/schemas/vault-secret"
          }
        }
      },
      "vault-client-secret-version": {
        "type": "object",
        "description": "Metadata about an client secret item version",
        "properties": {
          "version": {
            "$ref": "#/components/schemas/vault-version"
          },
          "created_at": {
            "$ref": "#/components/schemas/vault-version-created-at"
          },
          "state": {
            "$ref": "#/components/schemas/vault-item-version-state"
          },
          "destroy_at": {
            "$ref": "#/components/schemas/vault-item-version-destroy-at"
          },
          "client_secret": {
            "$ref": "#/components/schemas/vault-secret"
          },
          "client_secret_id": {
            "$ref": "#/components/schemas/vault-client-secret-id"
          }
        }
      },
      "vault-req-list-last": {
        "type": "string",
        "description": "Internal ID returned in the previous look up response. Used for pagination."
      },
      "vault-list-count": {
        "type": "integer",
        "description": "Total number of items matching the given query",
        "examples": [20]
      },
      "vault-list-last": {
        "type": "string",
        "description": "Internal ID returned in the previous look up response. Used for pagination."
      },
      "vault-has-compromised-versions": {
        "type": "boolean",
        "description": "Return true if the item has any version in a compromised state",
        "default": false,
        "examples": [true]
      },
      "vault-structured-data": {
        "type": "object",
        "description": "JSON used to perform bulk encryption operations",
        "examples": [
          {
            "users": [
              {
                "name": "John",
                "ssn": "123-45-6789"
              },
              {
                "name": "Dennis",
                "ssn": "987-65-4321"
              }
            ]
          }
        ]
      },
      "vault-encrypted-structured-data": {
        "type": "object",
        "description": "Structured data with the filtered elements encrypted",
        "examples": [
          {
            "users": [
              {
                "name": "John",
                "ssn": "CwAAAIfgVg2uv98KIMhAS17DQfznWEA8yXTqLvZFaXDafQIu"
              },
              {
                "name": "Dennis",
                "ssn": "CwAAADIqwKdF8LQc9SlAFvyf+G4wvsCgurmuVIWad9Ip5tl2"
              }
            ]
          }
        ]
      },
      "vault-fpe-encrypted-structured-data": {
        "type": "object",
        "description": "Structured data with the filtered elements encrypted using FPE",
        "examples": [
          {
            "users": [
              {
                "name": "John",
                "ssn": "987-65-4321"
              },
              {
                "name": "Dennis",
                "ssn": "123-45-6789"
              }
            ]
          }
        ]
      },
      "vault-structured-filter": {
        "type": "string",
        "format": "jsonpath",
        "description": "Filter expression that must target string elements in the `structured_data` field",
        "examples": ["$.users[*].ssn"]
      },
      "vault-tweak": {
        "type": "string",
        "description": "User-provided tweak string. If omitted, a random string will be generated and returned during encryption. Securely store the tweak source, as it is required to decrypt the data.",
        "examples": ["My Tweak"]
      },
      "vault-alphabet": {
        "type": "string",
        "enum": [
          "numeric",
          "alphalower",
          "alphaupper",
          "alpha",
          "alphanumericlower",
          "alphanumericupper",
          "alphanumeric"
        ],
        "description": "Character set to use for Format Preserving Encryption (FPE)",
        "examples": ["alphanumeric"]
      },
      "vault-default-settings": {
        "type": "object",
        "description": "Default settings object used in console to auto-fill storage settings"
      },
      "vault-inherited-settings": {
        "type": "object",
        "description": "Full paths of the parent folders from which settings inherit their values",
        "properties": {
          "rotation_frequency": {
            "type": "string"
          },
          "rotation_state": {
            "type": "string"
          },
          "rotation_grace_period": {
            "type": "string"
          }
        }
      },
      "vault-rotation-inherited-settings": {
        "type": "object",
        "description": "Full paths of the parent folders from which settings inherit their values",
        "properties": {
          "rotation_frequency": {
            "type": "string"
          },
          "rotation_state": {
            "type": "string"
          }
        }
      },
      "vault-service-config": {
        "type": "object",
        "description": "Vault Service Settings",
        "properties": {
          "name": {
            "type": "string"
          },
          "db_encryption": {
            "type": "object",
            "properties": {
              "algorithm": {
                "type": "string"
              },
              "primary_key_id": {
                "type": "string"
              }
            }
          },
          "enable_allowed_ips": {
            "type": "boolean"
          },
          "ip_allow_list_rid": {
            "type": "string",
            "description": "IP Allow list resource id"
          },
          "audit_data_activity": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "audit_service_config_id": {
                "type": "string"
              },
              "areas": {
                "type": "object",
                "properties": {
                  "key_updates": {
                    "type": "boolean"
                  },
                  "key_encryption": {
                    "type": "boolean"
                  },
                  "key_signing": {
                    "type": "boolean"
                  },
                  "secret_updates": {
                    "type": "boolean"
                  },
                  "secret_retrieval": {
                    "type": "boolean"
                  },
                  "pangea_token_updates": {
                    "type": "boolean"
                  },
                  "pangea_token_retrieval": {
                    "type": "boolean"
                  },
                  "pangea_client_secret_updates": {
                    "type": "boolean"
                  },
                  "pangea_client_secret_retrieval": {
                    "type": "boolean"
                  },
                  "pangea_platform_client_secret_updates": {
                    "type": "boolean"
                  },
                  "pangea_platform_client_secret_retrieval": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "file_encryption": {
            "algorithm": {
              "type": "string"
            },
            "folder": {
              "type": "string"
            },
            "password_algorithm": {
              "type": "string"
            },
            "password_folder": {
              "type": "string"
            }
          },
          "authn_config_id": {
            "type": "string",
            "description": "ConfigID for authn (for client secrets)"
          },
          "default_settings": {
            "type": "object",
            "properties": {
              "store_pangea_tokens": {
                "type": "boolean"
              },
              "encryption_settings": {
                "type": "object",
                "properties": {
                  "folder": {
                    "type": "string"
                  },
                  "rotation_frequency": {
                    "type": "string"
                  },
                  "rotation_state": {
                    "type": "string"
                  },
                  "max_rotation_frequency": {
                    "type": "string"
                  },
                  "audit_verbose": {
                    "type": "boolean"
                  }
                }
              },
              "jwt_settings": {
                "type": "object",
                "properties": {
                  "folder": {
                    "type": "string"
                  },
                  "rotation_frequency": {
                    "type": "string"
                  },
                  "rotation_state": {
                    "type": "string"
                  },
                  "max_rotation_frequency": {
                    "type": "string"
                  },
                  "audit_verbose": {
                    "type": "boolean"
                  }
                }
              },
              "signing_settings": {
                "type": "object",
                "properties": {
                  "folder": {
                    "type": "string"
                  },
                  "rotation_frequency": {
                    "type": "string"
                  },
                  "rotation_state": {
                    "type": "string"
                  },
                  "max_rotation_frequency": {
                    "type": "string"
                  },
                  "audit_verbose": {
                    "type": "boolean"
                  }
                }
              },
              "secret_settings": {
                "type": "object",
                "properties": {
                  "folder": {
                    "type": "string"
                  }
                }
              },
              "pangea_token_settings": {
                "type": "object",
                "properties": {
                  "folder": {
                    "type": "string"
                  },
                  "rotation_frequency": {
                    "type": "string"
                  },
                  "rotation_state": {
                    "type": "string"
                  },
                  "rotation_grace_period": {
                    "type": "string"
                  }
                }
              },
              "pangea_client_secret_settings": {
                "type": "object",
                "properties": {
                  "folder": {
                    "type": "string"
                  },
                  "rotation_frequency": {
                    "type": "string"
                  },
                  "rotation_state": {
                    "type": "string"
                  },
                  "rotation_grace_period": {
                    "type": "string"
                  }
                }
              },
              "pangea_platform_client_secret_settings": {
                "type": "object",
                "properties": {
                  "folder": {
                    "type": "string"
                  },
                  "rotation_frequency": {
                    "type": "string"
                  },
                  "rotation_state": {
                    "type": "string"
                  },
                  "rotation_grace_period": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "vault-service-config-result": {
        "allOf": [
          {
            "$ref": "#/components/schemas/vault-service-config"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ]
      },
      "vault-service-config-update": {
        "allOf": [
          {
            "$ref": "#/components/schemas/vault-service-config"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ]
      },
      "vault-subscription": {
        "type": "object",
        "description": "Vault Subscription Access",
        "required": ["item_id", "subscribers"],
        "properties": {
          "item_id": {
            "type": "string",
            "description": "Item ID for which the subscription is being created"
          },
          "subscribers": {
            "type": "object",
            "patternProperties": {
              ".+@.+": {
                "$ref": "#/components/schemas/vault-subscription-data"
              }
            }
          }
        },
        "additionalProperties": false
      },
      "user-subscriptions": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/user-subscription"
        }
      },
      "user-subscription": {
        "type": "object",
        "description": "User's subscribed item",
        "properties": {
          "item_id": {
            "type": "string",
            "description": "Item ID for which the subscribed item"
          },
          "item_name": {
            "type": "string",
            "description": "Item Name for which the subscribed item"
          }
        }
      },
      "vault-subscription-rd": {
        "type": "object",
        "description": "Vault Subscription Access",
        "required": ["item_id"],
        "properties": {
          "item_id": {
            "type": "string",
            "description": "Item ID for which the subscription is being created"
          },
          "subscribers": {
            "type": "object",
            "patternProperties": {
              ".+@.+": {
                "$ref": "#/components/schemas/vault-subscription-data"
              }
            }
          }
        },
        "additionalProperties": false
      },
      "vault-subscription-result": {
        "required": ["item_id", "subscribers"],
        "$ref": "#/components/schemas/vault-subscription"
      },
      "vault-subscription-data": {
        "type": ["object", "null"],
        "description": "Vault Subscription Data",
        "properties": {
          "triggers": {
            "$ref": "#/components/schemas/vault-subscription-triggers"
          }
        }
      },
      "vault-subscription-triggers": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/vault-subscription-trigger"
        }
      },
      "vault-subscription-trigger": {
        "type": "string",
        "enum": ["expiring", "expired", "rotating", "*"]
      },
      "vault-get-request": {
        "type": "object",
        "required": ["id"],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/vault-req-id"
          },
          "version": {
            "$ref": "#/components/schemas/vault-req-multiple-versions"
          },
          "version_state": {
            "$ref": "#/components/schemas/vault-req-item-version-state"
          },
          "verbose": {
            "$ref": "#/components/schemas/vault-req-verbose"
          }
        },
        "additionalProperties": false
      },
      "vault-get-asymmetric-key-response": {
        "title": "Asymmetric Key",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/vault-key-id"
          },
          "type": {
            "const": "asymmetric_key",
            "type": "string",
            "description": "Type of the Vault item"
          },
          "item_state": {
            "$ref": "#/components/schemas/vault-item-state"
          },
          "current_version": {
            "$ref": "#/components/schemas/vault-asymmetric-key-version"
          },
          "name": {
            "$ref": "#/components/schemas/vault-name"
          },
          "folder": {
            "$ref": "#/components/schemas/vault-folder"
          },
          "metadata": {
            "$ref": "#/components/schemas/vault-user-metadata"
          },
          "tags": {
            "$ref": "#/components/schemas/vault-tags"
          },
          "rotation_frequency": {
            "$ref": "#/components/schemas/vault-rotation-frequency"
          },
          "rotation_state": {
            "$ref": "#/components/schemas/vault-rotation-state"
          },
          "last_rotated": {
            "$ref": "#/components/schemas/vault-last-rotated"
          },
          "next_rotation": {
            "$ref": "#/components/schemas/vault-next-rotation"
          },
          "expiration": {
            "$ref": "#/components/schemas/vault-expiration"
          },
          "created_at": {
            "$ref": "#/components/schemas/vault-created-at"
          },
          "algorithm": {
            "$ref": "#/components/schemas/vault-asymmetric-key-algorithm"
          },
          "purpose": {
            "$ref": "#/components/schemas/vault-asymmetric-key-purpose"
          },
          "encrypting_item_id": {
            "$ref": "#/components/schemas/vault-encrypting-item-id"
          },
          "inherited_settings": {
            "$ref": "#/components/schemas/vault-rotation-inherited-settings"
          },
          "versions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/vault-asymmetric-key-version"
            }
          },
          "exportable": {
            "$ref": "#/components/schemas/vault-key-exportable"
          }
        }
      },
      "vault-get-symmetric-key-response": {
        "title": "Symmetric Key",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/vault-key-id"
          },
          "type": {
            "const": "symmetric_key",
            "type": "string",
            "description": "Type of the Vault item"
          },
          "item_state": {
            "$ref": "#/components/schemas/vault-item-state"
          },
          "current_version": {
            "$ref": "#/components/schemas/vault-symmetric-key-version"
          },
          "name": {
            "$ref": "#/components/schemas/vault-name"
          },
          "folder": {
            "$ref": "#/components/schemas/vault-folder"
          },
          "metadata": {
            "$ref": "#/components/schemas/vault-user-metadata"
          },
          "tags": {
            "$ref": "#/components/schemas/vault-tags"
          },
          "rotation_frequency": {
            "$ref": "#/components/schemas/vault-rotation-frequency"
          },
          "rotation_state": {
            "$ref": "#/components/schemas/vault-rotation-state"
          },
          "last_rotated": {
            "$ref": "#/components/schemas/vault-last-rotated"
          },
          "next_rotation": {
            "$ref": "#/components/schemas/vault-next-rotation"
          },
          "expiration": {
            "$ref": "#/components/schemas/vault-expiration"
          },
          "created_at": {
            "$ref": "#/components/schemas/vault-created-at"
          },
          "algorithm": {
            "$ref": "#/components/schemas/vault-asymmetric-key-algorithm"
          },
          "purpose": {
            "$ref": "#/components/schemas/vault-asymmetric-key-purpose"
          },
          "encrypting_item_id": {
            "$ref": "#/components/schemas/vault-encrypting-item-id"
          },
          "inherited_settings": {
            "$ref": "#/components/schemas/vault-rotation-inherited-settings"
          },
          "versions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/vault-symmetric-key-version"
            }
          },
          "exportable": {
            "$ref": "#/components/schemas/vault-key-exportable"
          }
        }
      },
      "vault-get-secret-response": {
        "title": "Secret",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/vault-secret-id"
          },
          "type": {
            "const": "secret",
            "type": "string",
            "description": "Type of the Vault item"
          },
          "item_state": {
            "$ref": "#/components/schemas/vault-item-state"
          },
          "current_version": {
            "$ref": "#/components/schemas/vault-secret-version"
          },
          "name": {
            "$ref": "#/components/schemas/vault-name"
          },
          "folder": {
            "$ref": "#/components/schemas/vault-folder"
          },
          "metadata": {
            "$ref": "#/components/schemas/vault-user-metadata"
          },
          "tags": {
            "$ref": "#/components/schemas/vault-tags"
          },
          "rotation_frequency": {
            "$ref": "#/components/schemas/vault-rotation-frequency"
          },
          "rotation_state": {
            "$ref": "#/components/schemas/vault-rotation-state"
          },
          "last_rotated": {
            "$ref": "#/components/schemas/vault-last-rotated"
          },
          "next_rotation": {
            "$ref": "#/components/schemas/vault-next-rotation"
          },
          "expiration": {
            "$ref": "#/components/schemas/vault-expiration"
          },
          "created_at": {
            "$ref": "#/components/schemas/vault-created-at"
          },
          "encrypting_item_id": {
            "$ref": "#/components/schemas/vault-encrypting-item-id"
          },
          "versions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/vault-secret-version"
            }
          }
        }
      },
      "vault-get-token-response": {
        "title": "Pangea Token",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/vault-token-id"
          },
          "type": {
            "const": "pangea_token",
            "type": "string",
            "description": "Type of the Vault item"
          },
          "item_state": {
            "$ref": "#/components/schemas/vault-item-state"
          },
          "current_version": {
            "$ref": "#/components/schemas/vault-secret-version"
          },
          "name": {
            "$ref": "#/components/schemas/vault-name"
          },
          "folder": {
            "$ref": "#/components/schemas/vault-folder"
          },
          "metadata": {
            "$ref": "#/components/schemas/vault-user-metadata"
          },
          "tags": {
            "$ref": "#/components/schemas/vault-tags"
          },
          "rotation_frequency": {
            "$ref": "#/components/schemas/vault-rotation-frequency"
          },
          "rotation_state": {
            "$ref": "#/components/schemas/vault-rotation-state"
          },
          "rotation_grace_period": {
            "$ref": "#/components/schemas/vault-rotation-grace-period"
          },
          "last_rotated": {
            "$ref": "#/components/schemas/vault-last-rotated"
          },
          "next_rotation": {
            "$ref": "#/components/schemas/vault-next-rotation"
          },
          "expiration": {
            "$ref": "#/components/schemas/vault-expiration"
          },
          "created_at": {
            "$ref": "#/components/schemas/vault-created-at"
          },
          "encrypting_item_id": {
            "$ref": "#/components/schemas/vault-encrypting-item-id"
          },
          "inherited_settings": {
            "$ref": "#/components/schemas/vault-inherited-settings"
          },
          "versions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/vault-secret-version"
            }
          }
        }
      },
      "vault-get-client-secret-response": {
        "title": "Client Secret",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/vault-token-id"
          },
          "type": {
            "const": "pangea_client_secret",
            "type": "string",
            "description": "Type of the Vault item"
          },
          "item_state": {
            "$ref": "#/components/schemas/vault-item-state"
          },
          "current_version": {
            "$ref": "#/components/schemas/vault-client-secret-version"
          },
          "name": {
            "$ref": "#/components/schemas/vault-name"
          },
          "folder": {
            "$ref": "#/components/schemas/vault-folder"
          },
          "metadata": {
            "$ref": "#/components/schemas/vault-pangea-metadata"
          },
          "tags": {
            "$ref": "#/components/schemas/vault-tags"
          },
          "client_id": {
            "$ref": "#/components/schemas/vault-client-id"
          },
          "rotation_frequency": {
            "$ref": "#/components/schemas/vault-rotation-frequency"
          },
          "rotation_state": {
            "$ref": "#/components/schemas/vault-rotation-state"
          },
          "rotation_grace_period": {
            "$ref": "#/components/schemas/vault-rotation-grace-period"
          },
          "last_rotated": {
            "$ref": "#/components/schemas/vault-last-rotated"
          },
          "next_rotation": {
            "$ref": "#/components/schemas/vault-next-rotation"
          },
          "expiration": {
            "$ref": "#/components/schemas/vault-expiration"
          },
          "created_at": {
            "$ref": "#/components/schemas/vault-created-at"
          },
          "encrypting_item_id": {
            "$ref": "#/components/schemas/vault-encrypting-item-id"
          },
          "inherited_settings": {
            "$ref": "#/components/schemas/vault-inherited-settings"
          },
          "versions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/vault-client-secret-version"
            }
          }
        }
      },
      "vault-get-pangea-platform-client-secret-response": {
        "title": "Pangea Platform Client Secret",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/vault-id"
          },
          "type": {
            "const": "pangea_platform_client_secret",
            "type": "string",
            "description": "Type of the Vault item"
          },
          "item_state": {
            "$ref": "#/components/schemas/vault-item-state"
          },
          "current_version": {
            "$ref": "#/components/schemas/vault-client-secret-version"
          },
          "name": {
            "$ref": "#/components/schemas/vault-name"
          },
          "folder": {
            "$ref": "#/components/schemas/vault-folder"
          },
          "metadata": {
            "$ref": "#/components/schemas/vault-user-metadata"
          },
          "tags": {
            "$ref": "#/components/schemas/vault-tags"
          },
          "client_id": {
            "$ref": "#/components/schemas/vault-client-id"
          },
          "rotation_frequency": {
            "$ref": "#/components/schemas/vault-rotation-frequency"
          },
          "rotation_state": {
            "$ref": "#/components/schemas/vault-rotation-state"
          },
          "rotation_grace_period": {
            "$ref": "#/components/schemas/vault-rotation-grace-period"
          },
          "last_rotated": {
            "$ref": "#/components/schemas/vault-last-rotated"
          },
          "next_rotation": {
            "$ref": "#/components/schemas/vault-next-rotation"
          },
          "expiration": {
            "$ref": "#/components/schemas/vault-expiration"
          },
          "created_at": {
            "$ref": "#/components/schemas/vault-created-at"
          },
          "encrypting_item_id": {
            "$ref": "#/components/schemas/vault-encrypting-item-id"
          },
          "inherited_settings": {
            "$ref": "#/components/schemas/vault-inherited-settings"
          },
          "versions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/vault-client-secret-version"
            }
          }
        }
      },
      "vault-get-folder-response": {
        "title": "Folder",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/vault-folder-id"
          },
          "type": {
            "const": "folder",
            "type": "string",
            "description": "Type of the Vault item"
          },
          "name": {
            "$ref": "#/components/schemas/vault-name"
          },
          "folder": {
            "$ref": "#/components/schemas/vault-folder"
          },
          "metadata": {
            "$ref": "#/components/schemas/vault-user-metadata"
          },
          "tags": {
            "$ref": "#/components/schemas/vault-tags"
          },
          "created_at": {
            "$ref": "#/components/schemas/vault-created-at"
          },
          "inherited_settings": {
            "$ref": "#/components/schemas/vault-inherited-settings"
          }
        }
      },
      "vault-export-request": {
        "type": "object",
        "required": ["id"],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/vault-req-key-id"
          },
          "version": {
            "$ref": "#/components/schemas/vault-req-key-version"
          },
          "encryption_key": {
            "$ref": "#/components/schemas/vault-export-encryption-key"
          },
          "encryption_algorithm": {
            "$ref": "#/components/schemas/vault-export-encryption-algorithm"
          }
        },
        "additionalProperties": false
      },
      "vault-export-asymmetric-key-response": {
        "title": "Asymmetric Key",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/vault-key-id"
          },
          "version": {
            "$ref": "#/components/schemas/vault-key-version"
          },
          "type": {
            "const": "asymmetric_key",
            "type": "string",
            "description": "Type of the Vault item"
          },
          "item_state": {
            "$ref": "#/components/schemas/vault-item-state"
          },
          "algorithm": {
            "$ref": "#/components/schemas/vault-asymmetric-key-algorithm"
          },
          "public_key": {
            "$ref": "#/components/schemas/vault-public-key"
          },
          "private_key": {
            "$ref": "#/components/schemas/vault-private-key"
          },
          "encrypted": {
            "$ref": "#/components/schemas/vault-export-encrypted"
          }
        }
      },
      "vault-export-symmetric-key-response": {
        "title": "Symmetric Key",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/vault-key-id"
          },
          "version": {
            "$ref": "#/components/schemas/vault-key-version"
          },
          "type": {
            "const": "symmetric_key",
            "type": "string",
            "description": "Type of the Vault item"
          },
          "item_state": {
            "$ref": "#/components/schemas/vault-item-state"
          },
          "algorithm": {
            "$ref": "#/components/schemas/vault-asymmetric-key-algorithm"
          },
          "key": {
            "$ref": "#/components/schemas/vault-key"
          },
          "encrypted": {
            "$ref": "#/components/schemas/vault-export-encrypted"
          }
        }
      },
      "vault-generate-symmetric-key-request": {
        "title": "Symmetric Key",
        "type": "object",
        "required": ["type", "purpose", "algorithm"],
        "properties": {
          "type": {
            "const": "symmetric_key",
            "type": "string",
            "description": "Type of the Vault item"
          },
          "purpose": {
            "$ref": "#/components/schemas/vault-symmetric-key-purpose"
          },
          "name": {
            "$ref": "#/components/schemas/vault-name"
          },
          "folder": {
            "$ref": "#/components/schemas/vault-folder"
          },
          "metadata": {
            "$ref": "#/components/schemas/vault-user-metadata"
          },
          "tags": {
            "$ref": "#/components/schemas/vault-tags"
          },
          "rotation_frequency": {
            "$ref": "#/components/schemas/vault-req-rotation-frequency"
          },
          "rotation_state": {
            "$ref": "#/components/schemas/vault-req-rotation-state"
          },
          "expiration": {
            "$ref": "#/components/schemas/vault-expiration"
          },
          "exportable": {
            "$ref": "#/components/schemas/vault-key-req-exportable"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/vault-symmetric-key-request-encryption"
          },
          {
            "$ref": "#/components/schemas/vault-symmetric-key-request-jwt"
          },
          {
            "$ref": "#/components/schemas/vault-symmetric-key-request-fpe"
          }
        ],
        "discriminator": {
          "propertyName": "purpose",
          "mapping": {
            "encryption": "#/components/schemas/vault-symmetric-key-request-encryption",
            "jwt": "#/components/schemas/vault-symmetric-key-request-jwt",
            "fpe": "#/components/schemas/vault-symmetric-key-request-fpe"
          }
        }
      },
      "vault-asymmetric-key-request-signing": {
        "type": "object",
        "properties": {
          "algorithm": {
            "$ref": "#/components/schemas/vault-asymmetric-key-signing-algorithm"
          }
        }
      },
      "vault-asymmetric-key-request-encryption": {
        "type": "object",
        "properties": {
          "algorithm": {
            "$ref": "#/components/schemas/vault-asymmetric-key-encryption-algorithm"
          }
        }
      },
      "vault-asymmetric-key-request-jwt": {
        "type": "object",
        "properties": {
          "algorithm": {
            "$ref": "#/components/schemas/vault-asymmetric-key-jwt-algorithm"
          }
        }
      },
      "vault-asymmetric-key-request-pki": {
        "type": "object",
        "properties": {
          "algorithm": {
            "$ref": "#/components/schemas/vault-asymmetric-key-pki-algorithm"
          }
        }
      },
      "vault-symmetric-key-request-encryption": {
        "type": "object",
        "properties": {
          "algorithm": {
            "$ref": "#/components/schemas/vault-symmetric-key-encryption-algorithm"
          }
        }
      },
      "vault-symmetric-key-request-jwt": {
        "type": "object",
        "properties": {
          "algorithm": {
            "$ref": "#/components/schemas/vault-symmetric-key-jwt-algorithm"
          }
        }
      },
      "vault-symmetric-key-request-fpe": {
        "type": "object",
        "properties": {
          "algorithm": {
            "$ref": "#/components/schemas/vault-symmetric-key-fpe-algorithm"
          }
        }
      },
      "vault-generate-asymmetric-key-request": {
        "title": "Asymmetric Key",
        "type": "object",
        "required": ["type", "purpose", "algorithm"],
        "properties": {
          "type": {
            "const": "asymmetric_key",
            "type": "string",
            "description": "Type of the Vault item"
          },
          "purpose": {
            "$ref": "#/components/schemas/vault-asymmetric-key-purpose"
          },
          "name": {
            "$ref": "#/components/schemas/vault-name"
          },
          "folder": {
            "$ref": "#/components/schemas/vault-folder"
          },
          "metadata": {
            "$ref": "#/components/schemas/vault-user-metadata"
          },
          "tags": {
            "$ref": "#/components/schemas/vault-tags"
          },
          "rotation_frequency": {
            "$ref": "#/components/schemas/vault-req-rotation-frequency"
          },
          "rotation_state": {
            "$ref": "#/components/schemas/vault-req-rotation-state"
          },
          "expiration": {
            "$ref": "#/components/schemas/vault-expiration"
          },
          "exportable": {
            "$ref": "#/components/schemas/vault-key-req-exportable"
          }
        },
        "anyOf": [
          {
            "$ref": "#/components/schemas/vault-asymmetric-key-request-signing"
          },
          {
            "$ref": "#/components/schemas/vault-asymmetric-key-request-encryption"
          },
          {
            "$ref": "#/components/schemas/vault-asymmetric-key-request-jwt"
          },
          {
            "$ref": "#/components/schemas/vault-asymmetric-key-request-pki"
          }
        ],
        "discriminator": {
          "propertyName": "purpose",
          "mapping": {
            "signing": "#/components/schemas/vault-asymmetric-key-request-signing",
            "encryption": "#/components/schemas/vault-asymmetric-key-request-encryption",
            "jwt": "#/components/schemas/vault-asymmetric-key-request-jwt",
            "pki": "#/components/schemas/vault-asymmetric-key-request-pki"
          }
        }
      },
      "vault-generate-asymmetric-key-response": {
        "title": "Asymmetric Key",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/vault-key-id"
          },
          "type": {
            "const": "asymmetric_key",
            "type": "string",
            "description": "Type of the Vault item"
          },
          "version": {
            "$ref": "#/components/schemas/vault-key-version"
          },
          "algorithm": {
            "$ref": "#/components/schemas/vault-asymmetric-key-algorithm"
          },
          "purpose": {
            "$ref": "#/components/schemas/vault-asymmetric-key-purpose"
          },
          "public_key": {
            "$ref": "#/components/schemas/vault-public-key"
          }
        }
      },
      "vault-v2-generate-asymmetric-key-request": {
        "title": "Asymmetric Key",
        "type": "object",
        "required": ["type", "purpose", "algorithm"],
        "properties": {
          "type": {
            "const": "asymmetric_key"
          },
          "purpose": {
            "$ref": "#/components/schemas/vault-asymmetric-key-purpose"
          },
          "name": {
            "$ref": "#/components/schemas/vault-name"
          },
          "folder": {
            "$ref": "#/components/schemas/vault-folder"
          },
          "metadata": {
            "$ref": "#/components/schemas/vault-user-metadata"
          },
          "tags": {
            "$ref": "#/components/schemas/vault-tags"
          },
          "rotation_frequency": {
            "$ref": "#/components/schemas/vault-req-rotation-frequency"
          },
          "rotation_state": {
            "$ref": "#/components/schemas/vault-req-rotation-state"
          },
          "disabled_at": {
            "$ref": "#/components/schemas/vault-disabled-at"
          },
          "exportable": {
            "$ref": "#/components/schemas/vault-key-req-exportable"
          }
        },
        "anyOf": [
          {
            "$ref": "#/components/schemas/vault-asymmetric-key-request-signing"
          },
          {
            "$ref": "#/components/schemas/vault-asymmetric-key-request-encryption"
          },
          {
            "$ref": "#/components/schemas/vault-asymmetric-key-request-jwt"
          },
          {
            "$ref": "#/components/schemas/vault-asymmetric-key-request-pki"
          }
        ],
        "discriminator": {
          "propertyName": "purpose",
          "mapping": {
            "signing": "#/components/schemas/vault-asymmetric-key-request-signing",
            "encryption": "#/components/schemas/vault-asymmetric-key-request-encryption",
            "jwt": "#/components/schemas/vault-asymmetric-key-request-jwt",
            "pki": "#/components/schemas/vault-asymmetric-key-request-pki"
          }
        }
      },
      "vault-v2-generate-symmetric-key-request": {
        "title": "Symmetric Key",
        "type": "object",
        "required": ["type", "purpose", "algorithm"],
        "properties": {
          "type": {
            "const": "symmetric_key"
          },
          "purpose": {
            "$ref": "#/components/schemas/vault-symmetric-key-purpose"
          },
          "name": {
            "$ref": "#/components/schemas/vault-name"
          },
          "folder": {
            "$ref": "#/components/schemas/vault-folder"
          },
          "metadata": {
            "$ref": "#/components/schemas/vault-user-metadata"
          },
          "tags": {
            "$ref": "#/components/schemas/vault-tags"
          },
          "rotation_frequency": {
            "$ref": "#/components/schemas/vault-req-rotation-frequency"
          },
          "rotation_state": {
            "$ref": "#/components/schemas/vault-req-rotation-state"
          },
          "disabled_at": {
            "$ref": "#/components/schemas/vault-disabled-at"
          },
          "exportable": {
            "$ref": "#/components/schemas/vault-key-req-exportable"
          },
          "encrypting_item_id": {
            "$ref": "#/components/schemas/vault-encrypting-item-id"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/vault-symmetric-key-request-encryption"
          },
          {
            "$ref": "#/components/schemas/vault-symmetric-key-request-jwt"
          },
          {
            "$ref": "#/components/schemas/vault-symmetric-key-request-fpe"
          }
        ],
        "discriminator": {
          "propertyName": "purpose",
          "mapping": {
            "encryption": "#/components/schemas/vault-symmetric-key-request-encryption",
            "jwt": "#/components/schemas/vault-symmetric-key-request-jwt",
            "fpe": "#/components/schemas/vault-symmetric-key-request-fpe"
          }
        }
      },
      "vault-generate-symmetric-key-response": {
        "title": "Symmetric Key",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/vault-key-id"
          },
          "type": {
            "const": "symmetric_key",
            "type": "string",
            "description": "Type of the Vault item"
          },
          "version": {
            "$ref": "#/components/schemas/vault-key-version"
          },
          "algorithm": {
            "$ref": "#/components/schemas/vault-symmetric-key-algorithm"
          },
          "purpose": {
            "$ref": "#/components/schemas/vault-symmetric-key-purpose"
          }
        }
      },
      "vault-rotate-asymmetric-key-request": {
        "title": "Asymmetric Key",
        "type": "object",
        "required": ["id"],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/vault-key-id"
          },
          "rotation_state": {
            "$ref": "#/components/schemas/vault-req-manual-rotation-state"
          },
          "public_key": {
            "$ref": "#/components/schemas/vault-public-key"
          },
          "private_key": {
            "$ref": "#/components/schemas/vault-private-key"
          }
        },
        "additionalProperties": false
      },
      "vault-rotate-symmetric-key-request": {
        "title": "Symmetric Key",
        "type": "object",
        "required": ["id"],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/vault-key-id"
          },
          "rotation_state": {
            "$ref": "#/components/schemas/vault-req-manual-rotation-state"
          },
          "key": {
            "$ref": "#/components/schemas/vault-key"
          }
        },
        "additionalProperties": false
      },
      "vault-rotate-secret-request": {
        "title": "Secret",
        "type": "object",
        "required": ["id", "secret"],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/vault-req-secret-id"
          },
          "rotation_state": {
            "$ref": "#/components/schemas/vault-req-manual-rotation-state"
          },
          "secret": {
            "$ref": "#/components/schemas/vault-secret"
          }
        },
        "additionalProperties": false
      },
      "vault-rotate-token-request": {
        "title": "Pangea Token",
        "type": "object",
        "required": ["id"],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/vault-req-token-id"
          },
          "rotation_grace_period": {
            "$ref": "#/components/schemas/vault-req-manual-rotation-grace-period"
          },
          "rotation_state": {
            "$ref": "#/components/schemas/vault-req-manual-rotation-state"
          }
        },
        "additionalProperties": false
      },
      "vault-rotate-client-secret-request": {
        "title": "Client Secret",
        "type": "object",
        "required": ["id"],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/vault-req-secret-id"
          },
          "rotation_grace_period": {
            "$ref": "#/components/schemas/vault-req-rotation-grace-period"
          },
          "rotation_state": {
            "$ref": "#/components/schemas/vault-req-manual-rotation-state"
          }
        },
        "additionalProperties": false
      },
      "vault-rotate-pangea-platform-client-secret-request": {
        "title": "Pangea Platform Client Secret",
        "type": "object",
        "required": ["id"],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/vault-req-secret-id"
          },
          "rotation_grace_period": {
            "$ref": "#/components/schemas/vault-req-rotation-grace-period"
          },
          "rotation_state": {
            "$ref": "#/components/schemas/vault-req-manual-rotation-state"
          }
        },
        "additionalProperties": false
      },
      "vault-rotate-secret-response": {
        "title": "Secret",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/vault-id"
          },
          "version": {
            "$ref": "#/components/schemas/vault-version"
          },
          "type": {
            "$ref": "#/components/schemas/vault-type-secret"
          },
          "secret": {
            "$ref": "#/components/schemas/vault-secret"
          }
        }
      },
      "vault-rotate-token-response": {
        "title": "Pangea Token",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/vault-id"
          },
          "version": {
            "$ref": "#/components/schemas/vault-version"
          },
          "type": {
            "$ref": "#/components/schemas/vault-type-secret"
          },
          "secret": {
            "$ref": "#/components/schemas/vault-secret"
          }
        }
      },
      "vault-rotate-client-secret-response": {
        "title": "Client Secret",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/vault-id"
          },
          "version": {
            "$ref": "#/components/schemas/vault-version"
          },
          "type": {
            "$ref": "#/components/schemas/vault-type-secret"
          },
          "client_secret": {
            "$ref": "#/components/schemas/vault-client-secret"
          },
          "client_id": {
            "$ref": "#/components/schemas/vault-client-id"
          },
          "client_secret_id": {
            "$ref": "#/components/schemas/vault-client-secret-id"
          }
        }
      },
      "vault-rotate-pangea-platform-client-secret-response": {
        "title": "Pangea Platform Client Secret",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/vault-id"
          },
          "version": {
            "$ref": "#/components/schemas/vault-version"
          },
          "type": {
            "$ref": "#/components/schemas/vault-type-secret"
          },
          "client_secret": {
            "$ref": "#/components/schemas/vault-client-secret"
          },
          "client_id": {
            "$ref": "#/components/schemas/vault-client-id"
          },
          "client_secret_id": {
            "$ref": "#/components/schemas/vault-client-secret-id"
          }
        }
      },
      "vault-rotate-asymmetric-key-response": {
        "title": "Asymmetric Key",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/vault-key-id"
          },
          "type": {
            "const": "asymmetric_key",
            "type": "string",
            "description": "Type of the Vault item"
          },
          "version": {
            "$ref": "#/components/schemas/vault-key-version"
          },
          "public_key": {
            "$ref": "#/components/schemas/vault-public-key"
          },
          "algorithm": {
            "$ref": "#/components/schemas/vault-asymmetric-key-algorithm"
          },
          "purpose": {
            "$ref": "#/components/schemas/vault-asymmetric-key-purpose"
          }
        }
      },
      "vault-rotate-symmetric-key-response": {
        "title": "Symmetric Key",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/vault-key-id"
          },
          "type": {
            "const": "symmetric_key",
            "type": "string",
            "description": "Type of the Vault item"
          },
          "version": {
            "$ref": "#/components/schemas/vault-key-version"
          },
          "algorithm": {
            "$ref": "#/components/schemas/vault-symmetric-key-algorithm"
          },
          "purpose": {
            "$ref": "#/components/schemas/vault-symmetric-key-purpose"
          }
        }
      },
      "vault-v2-store-asymmetric-key-request": {
        "title": "Asymmetric Key",
        "type": "object",
        "required": [
          "type",
          "purpose",
          "algorithm",
          "public_key",
          "private_key"
        ],
        "properties": {
          "type": {
            "const": "asymmetric_key"
          },
          "purpose": {
            "$ref": "#/components/schemas/vault-asymmetric-key-purpose"
          },
          "public_key": {
            "$ref": "#/components/schemas/vault-public-key"
          },
          "private_key": {
            "$ref": "#/components/schemas/vault-private-key"
          },
          "name": {
            "$ref": "#/components/schemas/vault-req-key-name"
          },
          "folder": {
            "$ref": "#/components/schemas/vault-req-key-folder"
          },
          "metadata": {
            "$ref": "#/components/schemas/vault-user-metadata"
          },
          "tags": {
            "$ref": "#/components/schemas/vault-tags"
          },
          "rotation_frequency": {
            "$ref": "#/components/schemas/vault-req-rotation-frequency"
          },
          "rotation_state": {
            "$ref": "#/components/schemas/vault-req-rotation-state"
          },
          "disabled_at": {
            "$ref": "#/components/schemas/vault-disabled-at"
          },
          "encrypting_item_id": {
            "$ref": "#/components/schemas/vault-req-encrypting-item-id"
          },
          "exportable": {
            "$ref": "#/components/schemas/vault-key-req-exportable"
          }
        },
        "anyOf": [
          {
            "$ref": "#/components/schemas/vault-asymmetric-key-request-signing"
          },
          {
            "$ref": "#/components/schemas/vault-asymmetric-key-request-encryption"
          },
          {
            "$ref": "#/components/schemas/vault-asymmetric-key-request-jwt"
          },
          {
            "$ref": "#/components/schemas/vault-asymmetric-key-request-pki"
          }
        ],
        "discriminator": {
          "propertyName": "purpose",
          "mapping": {
            "signing": "#/components/schemas/vault-asymmetric-key-request-signing",
            "encryption": "#/components/schemas/vault-asymmetric-key-request-encryption",
            "jwt": "#/components/schemas/vault-asymmetric-key-request-jwt",
            "pki": "#/components/schemas/vault-asymmetric-key-request-pki"
          }
        }
      },
      "vault-store-asymmetric-key-request": {
        "title": "Asymmetric Key",
        "type": "object",
        "required": [
          "type",
          "purpose",
          "algorithm",
          "public_key",
          "private_key"
        ],
        "properties": {
          "type": {
            "const": "asymmetric_key",
            "type": "string",
            "description": "Type of the Vault item"
          },
          "purpose": {
            "$ref": "#/components/schemas/vault-asymmetric-key-purpose"
          },
          "public_key": {
            "$ref": "#/components/schemas/vault-public-key"
          },
          "private_key": {
            "$ref": "#/components/schemas/vault-private-key"
          },
          "name": {
            "$ref": "#/components/schemas/vault-req-key-name"
          },
          "folder": {
            "$ref": "#/components/schemas/vault-req-key-folder"
          },
          "metadata": {
            "$ref": "#/components/schemas/vault-user-metadata"
          },
          "tags": {
            "$ref": "#/components/schemas/vault-tags"
          },
          "rotation_frequency": {
            "$ref": "#/components/schemas/vault-req-rotation-frequency"
          },
          "rotation_state": {
            "$ref": "#/components/schemas/vault-req-rotation-state"
          },
          "expiration": {
            "$ref": "#/components/schemas/vault-expiration"
          },
          "encrypting_item_id": {
            "$ref": "#/components/schemas/vault-req-encrypting-item-id"
          },
          "exportable": {
            "$ref": "#/components/schemas/vault-key-req-exportable"
          }
        },
        "anyOf": [
          {
            "$ref": "#/components/schemas/vault-asymmetric-key-request-signing"
          },
          {
            "$ref": "#/components/schemas/vault-asymmetric-key-request-encryption"
          },
          {
            "$ref": "#/components/schemas/vault-asymmetric-key-request-jwt"
          },
          {
            "$ref": "#/components/schemas/vault-asymmetric-key-request-pki"
          }
        ],
        "discriminator": {
          "propertyName": "purpose",
          "mapping": {
            "signing": "#/components/schemas/vault-asymmetric-key-request-signing",
            "encryption": "#/components/schemas/vault-asymmetric-key-request-encryption",
            "jwt": "#/components/schemas/vault-asymmetric-key-request-jwt",
            "pki": "#/components/schemas/vault-asymmetric-key-request-pki"
          }
        }
      },
      "vault-v2-store-symmetric-key-request": {
        "title": "Symmetric Key",
        "type": "object",
        "required": ["type", "purpose", "algorithm", "key"],
        "properties": {
          "type": {
            "const": "symmetric_key"
          },
          "purpose": {
            "$ref": "#/components/schemas/vault-symmetric-key-purpose"
          },
          "key": {
            "$ref": "#/components/schemas/vault-key"
          },
          "name": {
            "$ref": "#/components/schemas/vault-req-key-name"
          },
          "folder": {
            "$ref": "#/components/schemas/vault-req-key-folder"
          },
          "metadata": {
            "$ref": "#/components/schemas/vault-user-metadata"
          },
          "tags": {
            "$ref": "#/components/schemas/vault-tags"
          },
          "rotation_frequency": {
            "$ref": "#/components/schemas/vault-req-rotation-frequency"
          },
          "rotation_state": {
            "$ref": "#/components/schemas/vault-req-rotation-state"
          },
          "disabled_at": {
            "$ref": "#/components/schemas/vault-disabled-at"
          },
          "encrypting_item_id": {
            "$ref": "#/components/schemas/vault-req-encrypting-item-id"
          },
          "exportable": {
            "$ref": "#/components/schemas/vault-key-req-exportable"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/vault-symmetric-key-request-encryption"
          },
          {
            "$ref": "#/components/schemas/vault-symmetric-key-request-jwt"
          },
          {
            "$ref": "#/components/schemas/vault-symmetric-key-request-fpe"
          }
        ],
        "discriminator": {
          "propertyName": "purpose",
          "mapping": {
            "encryption": "#/components/schemas/vault-symmetric-key-request-encryption",
            "jwt": "#/components/schemas/vault-symmetric-key-request-jwt",
            "fpe": "#/components/schemas/vault-symmetric-key-request-fpe"
          }
        }
      },
      "vault-store-symmetric-key-request": {
        "title": "Symmetric Key",
        "type": "object",
        "required": ["type", "purpose", "algorithm", "key"],
        "properties": {
          "type": {
            "const": "symmetric_key",
            "type": "string",
            "description": "Type of the Vault item"
          },
          "purpose": {
            "$ref": "#/components/schemas/vault-symmetric-key-purpose"
          },
          "key": {
            "$ref": "#/components/schemas/vault-key"
          },
          "name": {
            "$ref": "#/components/schemas/vault-req-key-name"
          },
          "folder": {
            "$ref": "#/components/schemas/vault-req-key-folder"
          },
          "metadata": {
            "$ref": "#/components/schemas/vault-user-metadata"
          },
          "tags": {
            "$ref": "#/components/schemas/vault-tags"
          },
          "rotation_frequency": {
            "$ref": "#/components/schemas/vault-req-rotation-frequency"
          },
          "rotation_state": {
            "$ref": "#/components/schemas/vault-req-rotation-state"
          },
          "expiration": {
            "$ref": "#/components/schemas/vault-expiration"
          },
          "encrypting_item_id": {
            "$ref": "#/components/schemas/vault-req-encrypting-item-id"
          },
          "exportable": {
            "$ref": "#/components/schemas/vault-key-req-exportable"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/vault-symmetric-key-request-encryption"
          },
          {
            "$ref": "#/components/schemas/vault-symmetric-key-request-jwt"
          },
          {
            "$ref": "#/components/schemas/vault-symmetric-key-request-fpe"
          }
        ],
        "discriminator": {
          "propertyName": "purpose",
          "mapping": {
            "encryption": "#/components/schemas/vault-symmetric-key-request-encryption",
            "jwt": "#/components/schemas/vault-symmetric-key-request-jwt",
            "fpe": "#/components/schemas/vault-symmetric-key-request-fpe"
          }
        }
      },
      "vault-store-secret-request": {
        "title": "Secret",
        "type": "object",
        "required": ["secret"],
        "properties": {
          "type": {
            "type": "string",
            "const": "secret",
            "description": "Type of the Vault item"
          },
          "secret": {
            "$ref": "#/components/schemas/vault-req-secret"
          },
          "name": {
            "$ref": "#/components/schemas/vault-name"
          },
          "folder": {
            "$ref": "#/components/schemas/vault-folder"
          },
          "metadata": {
            "$ref": "#/components/schemas/vault-user-metadata"
          },
          "tags": {
            "$ref": "#/components/schemas/vault-tags"
          },
          "expiration": {
            "$ref": "#/components/schemas/vault-expiration"
          },
          "encrypting_item_id": {
            "$ref": "#/components/schemas/vault-req-encrypting-item-id"
          }
        },
        "additionalProperties": false
      },
      "vault-store-token-request": {
        "title": "Pangea Token",
        "type": "object",
        "required": ["type", "secret"],
        "properties": {
          "type": {
            "const": "pangea_token",
            "type": "string",
            "description": "Type of the Vault item"
          },
          "secret": {
            "$ref": "#/components/schemas/vault-secret"
          },
          "name": {
            "$ref": "#/components/schemas/vault-name"
          },
          "folder": {
            "$ref": "#/components/schemas/vault-folder"
          },
          "metadata": {
            "$ref": "#/components/schemas/vault-user-metadata"
          },
          "tags": {
            "$ref": "#/components/schemas/vault-tags"
          },
          "rotation_frequency": {
            "$ref": "#/components/schemas/vault-req-rotation-frequency"
          },
          "rotation_state": {
            "$ref": "#/components/schemas/vault-req-rotation-state"
          },
          "rotation_grace_period": {
            "$ref": "#/components/schemas/vault-req-rotation-grace-period"
          },
          "expiration": {
            "$ref": "#/components/schemas/vault-expiration"
          },
          "encrypting_item_id": {
            "$ref": "#/components/schemas/vault-req-encrypting-item-id"
          }
        },
        "additionalProperties": false
      },
      "vault-store-client-secret-request": {
        "title": "Client Secret",
        "type": "object",
        "required": ["type", "client_secret", "client_id", "client_secret_id"],
        "properties": {
          "type": {
            "const": "pangea_client_secret",
            "type": "string",
            "description": "Type of the Vault item"
          },
          "client_secret": {
            "$ref": "#/components/schemas/vault-client-secret"
          },
          "client_id": {
            "$ref": "#/components/schemas/vault-client-id"
          },
          "client_secret_id": {
            "$ref": "#/components/schemas/vault-client-secret-id"
          },
          "name": {
            "$ref": "#/components/schemas/vault-name"
          },
          "folder": {
            "$ref": "#/components/schemas/vault-folder"
          },
          "metadata": {
            "$ref": "#/components/schemas/vault-user-metadata"
          },
          "tags": {
            "$ref": "#/components/schemas/vault-tags"
          },
          "rotation_frequency": {
            "$ref": "#/components/schemas/vault-req-rotation-frequency"
          },
          "rotation_state": {
            "type": "string",
            "description": "State to which the previous version should transition.",
            "enum": ["destroyed", "deactivated"],
            "examples": ["destroyed"],
            "default": "destroyed"
          },
          "rotation_grace_period": {
            "$ref": "#/components/schemas/vault-req-rotation-grace-period"
          },
          "expiration": {
            "$ref": "#/components/schemas/vault-expiration"
          },
          "encrypting_item_id": {
            "$ref": "#/components/schemas/vault-req-encrypting-item-id"
          }
        },
        "additionalProperties": false
      },
      "vault-store-pangea-platform-client-secret-request": {
        "title": "Pangea Platform Client Secret",
        "type": "object",
        "required": ["type", "client_secret", "client_id", "client_secret_id"],
        "properties": {
          "type": {
            "const": "pangea_platform_client_secret",
            "type": "string",
            "description": "Type of the Vault item"
          },
          "client_secret": {
            "$ref": "#/components/schemas/vault-client-secret"
          },
          "client_id": {
            "$ref": "#/components/schemas/vault-client-id"
          },
          "client_secret_id": {
            "$ref": "#/components/schemas/vault-client-secret-id"
          },
          "name": {
            "$ref": "#/components/schemas/vault-name"
          },
          "folder": {
            "$ref": "#/components/schemas/vault-folder"
          },
          "metadata": {
            "$ref": "#/components/schemas/vault-pangea-metadata"
          },
          "tags": {
            "$ref": "#/components/schemas/vault-tags"
          },
          "rotation_frequency": {
            "$ref": "#/components/schemas/vault-req-rotation-frequency"
          },
          "rotation_state": {
            "type": "string",
            "description": "State to which the previous version should transition. Always `destroyed` for Pangea tokens.",
            "enum": ["destroyed", "deactivated"],
            "examples": ["destroyed"],
            "default": "destroyed"
          },
          "rotation_grace_period": {
            "$ref": "#/components/schemas/vault-req-rotation-grace-period"
          },
          "expiration": {
            "$ref": "#/components/schemas/vault-expiration"
          },
          "encrypting_item_id": {
            "$ref": "#/components/schemas/vault-req-encrypting-item-id"
          }
        },
        "additionalProperties": false
      },
      "vault-store-secret-response": {
        "title": "Secret",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "secret"
          },
          "id": {
            "$ref": "#/components/schemas/vault-id"
          },
          "version": {
            "$ref": "#/components/schemas/vault-version"
          },
          "secret": {
            "$ref": "#/components/schemas/vault-secret"
          }
        }
      },
      "vault-store-token-response": {
        "title": "Pangea Token",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "pangea_token"
          },
          "id": {
            "$ref": "#/components/schemas/vault-id"
          },
          "version": {
            "$ref": "#/components/schemas/vault-version"
          },
          "secret": {
            "$ref": "#/components/schemas/vault-secret"
          }
        }
      },
      "vault-store-client-secret-response": {
        "title": "Client Secret",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "pangea_client_secret"
          },
          "id": {
            "$ref": "#/components/schemas/vault-id"
          },
          "version": {
            "$ref": "#/components/schemas/vault-version"
          },
          "client_secret": {
            "$ref": "#/components/schemas/vault-client-secret"
          },
          "client_id": {
            "$ref": "#/components/schemas/vault-client-id"
          },
          "client_secret_id": {
            "$ref": "#/components/schemas/vault-client-secret-id"
          }
        }
      },
      "vault-store-pangea-platform-client-secret-response": {
        "title": "Pangea Platform Client Secret",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "const": "pangea_platform_client_secret"
          },
          "id": {
            "$ref": "#/components/schemas/vault-id"
          },
          "version": {
            "$ref": "#/components/schemas/vault-version"
          },
          "client_secret": {
            "$ref": "#/components/schemas/vault-client-secret"
          },
          "client_id": {
            "$ref": "#/components/schemas/vault-client-id"
          },
          "client_secret_id": {
            "$ref": "#/components/schemas/vault-client-secret-id"
          }
        }
      },
      "vault-store-asymmetric-key-response": {
        "title": "Asymmetric Key",
        "type": "object",
        "properties": {
          "type": {
            "const": "asymmetric_key",
            "type": "string",
            "description": "Type of the Vault item"
          },
          "id": {
            "$ref": "#/components/schemas/vault-key-id"
          },
          "version": {
            "$ref": "#/components/schemas/vault-key-version"
          },
          "algorithm": {
            "$ref": "#/components/schemas/vault-asymmetric-key-algorithm"
          },
          "purpose": {
            "$ref": "#/components/schemas/vault-asymmetric-key-purpose"
          },
          "public_key": {
            "$ref": "#/components/schemas/vault-public-key"
          }
        }
      },
      "vault-store-symmetric-key-response": {
        "title": "Symmetric Key",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/vault-key-id"
          },
          "version": {
            "$ref": "#/components/schemas/vault-key-version"
          },
          "type": {
            "const": "symmetric_key",
            "type": "string",
            "description": "Type of the Vault item"
          },
          "algorithm": {
            "$ref": "#/components/schemas/vault-symmetric-key-algorithm"
          },
          "purpose": {
            "$ref": "#/components/schemas/vault-symmetric-key-purpose"
          }
        }
      },
      "vault-create-folder-request": {
        "type": "object",
        "required": ["folder", "name"],
        "properties": {
          "name": {
            "$ref": "#/components/schemas/vault-folder-name"
          },
          "folder": {
            "$ref": "#/components/schemas/vault-folder-folder"
          },
          "metadata": {
            "$ref": "#/components/schemas/vault-user-metadata"
          },
          "tags": {
            "$ref": "#/components/schemas/vault-tags"
          },
          "rotation_frequency": {
            "$ref": "#/components/schemas/vault-req-rotation-frequency"
          },
          "rotation_state": {
            "$ref": "#/components/schemas/vault-req-folder-rotation-state"
          },
          "rotation_grace_period": {
            "$ref": "#/components/schemas/vault-req-rotation-grace-period"
          },
          "expiration": {
            "$ref": "#/components/schemas/vault-req-expiration-or-never"
          }
        },
        "additionalProperties": false
      },
      "vault-update-item": {
        "type": "object",
        "title": "Item",
        "required": ["id"],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/vault-req-id"
          },
          "name": {
            "$ref": "#/components/schemas/vault-name"
          },
          "folder": {
            "$ref": "#/components/schemas/vault-folder"
          },
          "metadata": {
            "$ref": "#/components/schemas/vault-metadata"
          },
          "tags": {
            "$ref": "#/components/schemas/vault-tags"
          },
          "rotation_frequency": {
            "$ref": "#/components/schemas/vault-req-rotation-frequency"
          },
          "rotation_state": {
            "$ref": "#/components/schemas/vault-req-rotation-state"
          },
          "rotation_grace_period": {
            "$ref": "#/components/schemas/vault-req-rotation-grace-period"
          },
          "expiration": {
            "$ref": "#/components/schemas/vault-req-expiration-or-never"
          },
          "item_state": {
            "$ref": "#/components/schemas/vault-req-item-state"
          }
        },
        "additionalProperties": false
      },
      "vault-update-folder": {
        "type": "object",
        "title": "Folder",
        "required": ["id"],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/vault-req-id"
          },
          "name": {
            "$ref": "#/components/schemas/vault-folder-name"
          },
          "folder": {
            "$ref": "#/components/schemas/vault-folder-folder"
          },
          "metadata": {
            "$ref": "#/components/schemas/vault-user-metadata"
          },
          "tags": {
            "$ref": "#/components/schemas/vault-tags"
          }
        },
        "additionalProperties": false
      },
      "vault-v2-export-response": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/vault-key-id"
          },
          "type": {
            "const": "asymmetric_key"
          },
          "version": {
            "$ref": "#/components/schemas/vault-key-version"
          },
          "enabled": {
            "$ref": "#/components/schemas/vault-enabled"
          },
          "asymmetric_algorithm": {
            "$ref": "#/components/schemas/vault-export-asymmetric-algorithm"
          },
          "symmetric_algorithm": {
            "$ref": "#/components/schemas/vault-export-symmetric-algorithm"
          },
          "algorithm": {
            "$ref": "#/components/schemas/vault-symmetric-key-algorithm"
          },
          "encryption_type": {
            "$ref": "#/components/schemas/vault-export-response-encryption-type"
          },
          "kdf": {
            "$ref": "#/components/schemas/vault-export-kdf"
          },
          "hash_algorithm": {
            "$ref": "#/components/schemas/vault-export-hash-algorithm"
          },
          "iteration_count": {
            "$ref": "#/components/schemas/vault-export-iteration-count"
          },
          "encrypted_salt": {
            "$ref": "#/components/schemas/vault-export-encrypted-salt"
          }
        }
      },
      "-v2-item": {
        "type": "object",
        "properties": {
          "num_versions": {
            "$ref": "#/components/schemas/vault-num-versions"
          },
          "enabled": {
            "$ref": "#/components/schemas/vault-enabled"
          },
          "name": {
            "$ref": "#/components/schemas/vault-name"
          },
          "folder": {
            "$ref": "#/components/schemas/vault-folder"
          },
          "tags": {
            "$ref": "#/components/schemas/vault-tags"
          },
          "last_rotated": {
            "$ref": "#/components/schemas/vault-last-rotated"
          },
          "next_rotation": {
            "$ref": "#/components/schemas/vault-next-rotation"
          },
          "disabled_at": {
            "$ref": "#/components/schemas/vault-disabled-at"
          },
          "created_at": {
            "$ref": "#/components/schemas/vault-created-at"
          },
          "encrypting_item_id": {
            "$ref": "#/components/schemas/vault-encrypting-item-id"
          }
        }
      },
      "-v2-rotation-settings": {
        "type": "object",
        "properties": {
          "rotation_frequency": {
            "$ref": "#/components/schemas/vault-rotation-frequency"
          },
          "rotation_state": {
            "$ref": "#/components/schemas/vault-rotation-state"
          },
          "inherited_settings": {
            "$ref": "#/components/schemas/vault-rotation-inherited-settings"
          }
        }
      },
      "-v2-rotation-settings-grace-period": {
        "type": "object",
        "properties": {
          "rotation_frequency": {
            "$ref": "#/components/schemas/vault-rotation-frequency"
          },
          "rotation_state": {
            "$ref": "#/components/schemas/vault-rotation-state"
          },
          "rotation_grace_period": {
            "$ref": "#/components/schemas/vault-rotation-grace-period"
          },
          "inherited_settings": {
            "$ref": "#/components/schemas/vault-inherited-settings"
          }
        }
      },
      "v2-asymmetric-key": {
        "title": "Asymmetric Key",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "$ref": "#/components/schemas/vault-key-id"
              },
              "type": {
                "const": "asymmetric_key",
                "type": "string",
                "description": "Type of the Vault item"
              },
              "algorithm": {
                "$ref": "#/components/schemas/vault-asymmetric-key-algorithm"
              },
              "purpose": {
                "$ref": "#/components/schemas/vault-asymmetric-key-purpose"
              },
              "exportable": {
                "$ref": "#/components/schemas/vault-key-exportable"
              },
              "item_versions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/v2-asymmetric-key-version"
                }
              },
              "metadata": {
                "$ref": "#/components/schemas/vault-user-metadata"
              }
            }
          },
          {
            "$ref": "#/components/schemas/-v2-item"
          },
          {
            "$ref": "#/components/schemas/-v2-rotation-settings"
          }
        ]
      },
      "v2-symmetric-key": {
        "title": "Symmetric Key",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "$ref": "#/components/schemas/vault-key-id"
              },
              "type": {
                "const": "symmetric_key",
                "type": "string",
                "description": "Type of the Vault item"
              },
              "algorithm": {
                "$ref": "#/components/schemas/vault-symmetric-key-algorithm"
              },
              "purpose": {
                "$ref": "#/components/schemas/vault-symmetric-key-purpose"
              },
              "exportable": {
                "$ref": "#/components/schemas/vault-key-exportable"
              },
              "item_versions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/v2-symmetric-key-version"
                }
              },
              "metadata": {
                "$ref": "#/components/schemas/vault-user-metadata"
              }
            }
          },
          {
            "$ref": "#/components/schemas/-v2-item"
          },
          {
            "$ref": "#/components/schemas/-v2-rotation-settings"
          }
        ]
      },
      "v2-secret": {
        "title": "Secret",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "$ref": "#/components/schemas/vault-secret-id"
              },
              "type": {
                "const": "secret",
                "type": "string",
                "description": "Type of the Vault item"
              },
              "item_versions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/v2-secret-version"
                }
              },
              "metadata": {
                "$ref": "#/components/schemas/vault-user-metadata"
              }
            }
          },
          {
            "$ref": "#/components/schemas/-v2-item"
          }
        ]
      },
      "v2-token": {
        "title": "Pangea Token",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "$ref": "#/components/schemas/vault-token-id"
              },
              "type": {
                "const": "pangea_token",
                "type": "string",
                "description": "Type of the Vault item"
              },
              "item_versions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/v2-token-version"
                }
              },
              "metadata": {
                "$ref": "#/components/schemas/vault-user-metadata"
              }
            }
          },
          {
            "$ref": "#/components/schemas/-v2-item"
          },
          {
            "$ref": "#/components/schemas/-v2-rotation-settings-grace-period"
          }
        ]
      },
      "v2-client-secret": {
        "title": "Client Secret",
        "allOf": [
          {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/vault-secret-id"
              },
              "type": {
                "const": "pangea_client_secret",
                "type": "string",
                "description": "Type of the Vault item",
                "enum": ["pangea_platform_client_secret"]
              },
              "client_id": {
                "$ref": "#/components/schemas/vault-client-id"
              },
              "item_versions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/v2-client-secret-version"
                }
              },
              "metadata": {
                "$ref": "#/components/schemas/vault-pangea-metadata"
              }
            }
          },
          {
            "$ref": "#/components/schemas/-v2-item"
          },
          {
            "$ref": "#/components/schemas/-v2-rotation-settings-grace-period"
          }
        ]
      },
      "v2-folder": {
        "title": "Folder",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "$ref": "#/components/schemas/vault-folder-id"
              },
              "type": {
                "const": "folder",
                "type": "string",
                "description": "Type of the Vault item"
              },
              "name": {
                "$ref": "#/components/schemas/vault-name"
              },
              "folder": {
                "$ref": "#/components/schemas/vault-folder"
              },
              "metadata": {
                "$ref": "#/components/schemas/vault-user-metadata"
              },
              "tags": {
                "$ref": "#/components/schemas/vault-tags"
              },
              "created_at": {
                "$ref": "#/components/schemas/vault-created-at"
              }
            }
          },
          {
            "$ref": "#/components/schemas/-v2-rotation-settings-grace-period"
          }
        ]
      },
      "v2-list-item": {
        "type": "object",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "$ref": "#/components/schemas/vault-id"
              },
              "type": {
                "$ref": "#/components/schemas/vault-type"
              },
              "exportable": {
                "$ref": "#/components/schemas/vault-key-item-exportable"
              },
              "algorithm": {
                "type": "string",
                "description": "Algorithm, applicable only if the item is a key",
                "examples": ["ES256"]
              },
              "purpose": {
                "type": "string",
                "description": "Purpose, applicable only if the item is a key",
                "examples": ["encryption"]
              },
              "item_versions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/-v2-item-version"
                }
              },
              "compromised_versions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/-v2-item-version"
                }
              },
              "metadata": {
                "$ref": "#/components/schemas/vault-metadata"
              }
            }
          },
          {
            "$ref": "#/components/schemas/-v2-item"
          },
          {
            "$ref": "#/components/schemas/-v2-rotation-settings-grace-period"
          }
        ]
      },
      "-v2-item-version": {
        "type": "object",
        "description": "Metadata about an item version",
        "properties": {
          "version": {
            "$ref": "#/components/schemas/vault-version"
          },
          "created_at": {
            "$ref": "#/components/schemas/vault-version-created-at"
          },
          "state": {
            "$ref": "#/components/schemas/vault-item-version-state"
          },
          "destroyed_at": {
            "$ref": "#/components/schemas/vault-item-version-destroy-at"
          },
          "rotated_at": {
            "$ref": "#/components/schemas/vault-last-rotated"
          }
        }
      },
      "v2-symmetric-key-version": {
        "$ref": "#/components/schemas/-v2-item-version"
      },
      "v2-asymmetric-key-version": {
        "allOf": [
          {
            "$ref": "#/components/schemas/-v2-item-version"
          },
          {
            "type": "object",
            "properties": {
              "public_key": {
                "$ref": "#/components/schemas/vault-public-key"
              }
            }
          }
        ]
      },
      "v2-secret-version": {
        "allOf": [
          {
            "$ref": "#/components/schemas/-v2-item-version"
          },
          {
            "type": "object",
            "properties": {
              "secret": {
                "$ref": "#/components/schemas/vault-secret"
              }
            }
          }
        ]
      },
      "v2-token-version": {
        "allOf": [
          {
            "$ref": "#/components/schemas/-v2-item-version"
          },
          {
            "type": "object",
            "properties": {
              "token": {
                "$ref": "#/components/schemas/vault-token"
              }
            }
          }
        ]
      },
      "v2-client-secret-version": {
        "allOf": [
          {
            "$ref": "#/components/schemas/-v2-item-version"
          },
          {
            "type": "object",
            "properties": {
              "client_secret": {
                "$ref": "#/components/schemas/vault-client-secret"
              },
              "client_secret_id": {
                "$ref": "#/components/schemas/vault-client-secret-id"
              }
            }
          }
        ]
      }
    },
    "securitySchemes": {
      "APIToken": {
        "type": "http",
        "bearerFormat": "token",
        "description": "Pangea API Token",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "vault",
      "description": "Provides secure storage of secrets, cryptographic keys, and Pangea API Tokens tokens as Vault items. Easily generate, import, and manage secrets and keys to stay compliant and secure."
    },
    {
      "name": "v2-general",
      "description": "V2 General"
    },
    {
      "name": "v2-secrets",
      "description": "V2 Secrets"
    },
    {
      "name": "v2-keys",
      "description": "V2 Keys"
    },
    {
      "name": "v2-folders",
      "description": "V2 Folders"
    },
    {
      "name": "v2-jwt",
      "description": "V2 JWT"
    },
    {
      "name": "v1-general",
      "description": "V1 General"
    },
    {
      "name": "v1-secrets",
      "description": "V1 Secrets"
    },
    {
      "name": "v1-keys",
      "description": "V1 Keys"
    },
    {
      "name": "v1-folders",
      "description": "V1 Folders"
    },
    {
      "name": "v1-jwt",
      "description": "V1 JWT"
    }
  ]
}
